{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    cart: {\n      cartItems: []\n    },\n    wishlist: {\n      wishlistItems: []\n    },\n    token: '',\n    isAuthenticated: false,\n    loggedInUser: [],\n    reloaded: false,\n    productSearch: '',\n    isProductSearched: false,\n    search: {\n      searchItem: []\n    }\n  },\n  getters: {},\n  mutations: {\n    searchForItem(state) {\n      localStorage.setItem('productSearch', state.productSearch);\n    },\n\n    setSearchItem(state, cartItem) {\n      state.search.searchItem.push(cartItem);\n      localStorage.setItem('searchItem', JSON.stringify(state.search));\n    },\n\n    reloadingPage(state) {\n      if (localStorage.getItem('reloaded')) {\n        // The page was just reloaded. Clear the value from local storage\n        // so that it will reload the next time this page is visited.\n        localStorage.removeItem('reloaded', 'false');\n        console.log('Value of reload in store set to false');\n      } else {\n        // Set a flag so that we know not to reload the page twice.\n        localStorage.setItem('reloaded', 'true');\n        console.log(state.reloaded, 'Reload');\n        window.location.reload();\n      }\n    },\n\n    initializeStore(state) {\n      //Check if the cart exists in the local storage\n      if (localStorage.getItem('cart')) {\n        state.cart = JSON.parse(localStorage.getItem('cart')); //Add the cart to local storage if it doesn't exist\n      } else {\n        localStorage.setItem('cart', JSON.stringify(state.cart));\n      } //Checks if an authentication token is available in local storage\n\n\n      if (localStorage.getItem('token')) {\n        state.token = localStorage.getItem('token');\n        state.isAuthenticated = true;\n      } else {\n        state.token = '';\n        state.isAuthenticated = false;\n      } //Check if the wishlist exists in the local storage\n\n\n      if (localStorage.getItem('wishlist')) {\n        state.wishlist = JSON.parse(localStorage.getItem('wishlist')); //Add the wishlist to local storage if it doesn't exist\n      } else {\n        localStorage.setItem('wishlist', JSON.stringify(state.wishlist));\n      }\n    },\n\n    //ADDING AN ITEM TO THE CART\n    addToCart(state, cartItem) {\n      //Checking if the cart has an item\n      if (state.cart.cartItems.length > 0) {\n        //Checking if an item exists in a cart\n        const exist = state.cart.cartItems.filter(i => {\n          return i.items.id === cartItem.items.id;\n        }); //If the item exists, increment its quantity in the cart\n\n        if (exist.length > 0) {\n          exist[0].quantity = parseInt(exist[0].quantity) + parseInt(cartItem.quantity); //If the item doesn't exist, push it to the cart\n        } else {\n          state.cart.cartItems.push(cartItem);\n        } //Save the cart to the local storage\n\n\n        localStorage.setItem('cart', JSON.stringify(state.cart));\n      } //Adding a new item to the cart and saving it to the local storage\n      else {\n        state.cart.cartItems.push(cartItem);\n        localStorage.setItem('cart', JSON.stringify(state.cart));\n      }\n    },\n\n    //REMOVING AN ITEM FROM THE CART\n    removeFromCart(state, cartItem) {\n      // let itemIndex = state.cart.cartItems.indexOf(cartItem)\n      state.cart.cartItems.splice(cartItem, 1);\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n    },\n\n    //ADD ITEM TO WISHLIST\n    addToWishlist(state, wishlistItem) {\n      //Checking if the wishlist has an item\n      if (state.wishlist.wishlistItems.length > 0) {\n        //Checking if an item exists in a wishlist\n        const exist = state.wishlist.wishlistItems.filter(i => {\n          return i.items.id === wishlistItem.items.id;\n        }); //If the item exists, increment its quantity in the wishlist\n\n        if (exist.length > 0) {\n          exist[0].quantity = parseInt(exist[0].quantity) + parseInt(wishlistItem.quantity); //If the item doesn't exist, push it to the wishlist\n        } else {\n          state.wishlist.wishlistItems.push(wishlistItem);\n        } //Save the wishlist to the local storage\n\n\n        localStorage.setItem('wishlist', JSON.stringify(state.wishlist));\n      } //Adding a new item to the wishlist and saving it to the local storage\n      else {\n        state.wishlist.wishlistItems.push(wishlistItem);\n        localStorage.setItem('wishlist', JSON.stringify(state.wishlist));\n      }\n    },\n\n    //REMOVING ITEM FROM THE WISHLIST\n    removeFromWishlist(state, wishlistItem) {\n      // let itemIndex = state.cart.cartItems.indexOf(cartItem)\n      state.wishlist.wishlistItems.splice(wishlistItem, 1);\n      localStorage.setItem('wishlist', JSON.stringify(state.wishlist));\n    },\n\n    //SETTING AUTHENTICATION TOKEN\n    setToken(state, token) {\n      state.token = token;\n      state.isAuthenticated = true;\n    },\n\n    //REMOVING AUTHENTICATION TOKEN\n    removeToken(state) {\n      state.token = '';\n      state.isAuthenticated = false;\n    },\n\n    //CLEARING THE CART\n    clearCart(state) {\n      state.cart = {\n        cartItems: []\n      };\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n    },\n\n    //CLEARING THE WISHLIST\n    clearCart(state) {\n      state.cart = {\n        cartItems: []\n      };\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n    },\n\n    setLoggedInUser(state, payload) {\n      state.loggedInUser = payload;\n    }\n\n  },\n  actions: {\n    getUserDetails({\n      commit\n    }) {\n      axios.get('/api/v1/users/me/').then(response => {\n        commit('setLoggedInUser', response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"sources":["/home/sammyb/gee_collections/gee_collections_vue/src/store/index.js"],"names":["createStore","axios","state","cart","cartItems","wishlist","wishlistItems","token","isAuthenticated","loggedInUser","reloaded","productSearch","isProductSearched","search","searchItem","getters","mutations","searchForItem","localStorage","setItem","setSearchItem","cartItem","push","JSON","stringify","reloadingPage","getItem","removeItem","console","log","window","location","reload","initializeStore","parse","addToCart","length","exist","filter","i","items","id","quantity","parseInt","removeFromCart","splice","addToWishlist","wishlistItem","removeFromWishlist","setToken","removeToken","clearCart","setLoggedInUser","payload","actions","getUserDetails","commit","get","then","response","data","catch","error","modules"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex'\nimport axios from 'axios'\n\nexport default createStore({\n  state: {\n    cart:{\n      cartItems:[]\n    },\n    wishlist:{\n      wishlistItems:[]\n    },\n    token: '',\n    isAuthenticated: false,\n    loggedInUser: [],\n    reloaded: false,\n    productSearch: '',\n    isProductSearched: false,\n    search:{\n      searchItem: []\n    }\n  },\n  getters: {\n\n  },\n  mutations: {\n    searchForItem(state){\n      localStorage.setItem('productSearch',state.productSearch)\n    },\n    setSearchItem(state, cartItem){\n      state.search.searchItem.push(cartItem)\n      localStorage.setItem('searchItem',JSON.stringify(state.search))\n    },\n    reloadingPage(state){\n      if (localStorage.getItem('reloaded')) {\n        // The page was just reloaded. Clear the value from local storage\n        // so that it will reload the next time this page is visited.\n        localStorage.removeItem('reloaded', 'false');\n        console.log('Value of reload in store set to false')\n        } else {\n            // Set a flag so that we know not to reload the page twice.\n            localStorage.setItem('reloaded', 'true');\n            console.log(state.reloaded,'Reload')\n            window.location.reload();\n        }\n    },\n    initializeStore(state){\n      //Check if the cart exists in the local storage\n      if(localStorage.getItem('cart')){\n        state.cart = JSON.parse(localStorage.getItem('cart'))\n      //Add the cart to local storage if it doesn't exist\n      }else{\n        localStorage.setItem('cart',JSON.stringify(state.cart))\n      }\n      //Checks if an authentication token is available in local storage\n      if(localStorage.getItem('token')){\n        state.token = localStorage.getItem('token');\n        state.isAuthenticated = true;\n      }else{\n        state.token = '';\n        state.isAuthenticated = false;\n      }\n\n      //Check if the wishlist exists in the local storage\n      if(localStorage.getItem('wishlist')){\n        state.wishlist = JSON.parse(localStorage.getItem('wishlist'))\n      //Add the wishlist to local storage if it doesn't exist\n      }else{\n        localStorage.setItem('wishlist',JSON.stringify(state.wishlist))\n      }\n\n    },\n    //ADDING AN ITEM TO THE CART\n    addToCart(state, cartItem){\n      //Checking if the cart has an item\n      if(state.cart.cartItems.length > 0){\n        //Checking if an item exists in a cart\n        const exist = state.cart.cartItems.filter((i) => {\n          return i.items.id === cartItem.items.id;\n        })\n        //If the item exists, increment its quantity in the cart\n        if(exist.length > 0){\n          exist[0].quantity = parseInt(exist[0].quantity) + parseInt(cartItem.quantity)\n        //If the item doesn't exist, push it to the cart\n        }else{\n          state.cart.cartItems.push(cartItem)\n        }\n        //Save the cart to the local storage\n        localStorage.setItem('cart',JSON.stringify(state.cart));\n      }\n      //Adding a new item to the cart and saving it to the local storage\n      else {\n        state.cart.cartItems.push(cartItem)\n        localStorage.setItem('cart',JSON.stringify(state.cart));\n      }\n    },\n    //REMOVING AN ITEM FROM THE CART\n    removeFromCart(state, cartItem){\n        // let itemIndex = state.cart.cartItems.indexOf(cartItem)\n\n        state.cart.cartItems.splice(cartItem,1)\n        localStorage.setItem('cart',JSON.stringify(state.cart));\n    },\n    //ADD ITEM TO WISHLIST\n    addToWishlist(state, wishlistItem){\n      //Checking if the wishlist has an item\n      if(state.wishlist.wishlistItems.length > 0){\n        //Checking if an item exists in a wishlist\n        const exist = state.wishlist.wishlistItems.filter((i) => {\n          return i.items.id === wishlistItem.items.id;\n        })\n        //If the item exists, increment its quantity in the wishlist\n        if(exist.length > 0){\n          exist[0].quantity = parseInt(exist[0].quantity) + parseInt(wishlistItem.quantity)\n        //If the item doesn't exist, push it to the wishlist\n        }else{\n          state.wishlist.wishlistItems.push(wishlistItem)\n        }\n        //Save the wishlist to the local storage\n        localStorage.setItem('wishlist',JSON.stringify(state.wishlist));\n      }\n      //Adding a new item to the wishlist and saving it to the local storage\n      else {\n        state.wishlist.wishlistItems.push(wishlistItem)\n        localStorage.setItem('wishlist',JSON.stringify(state.wishlist));\n      }\n    },\n    //REMOVING ITEM FROM THE WISHLIST\n    removeFromWishlist(state, wishlistItem){\n      // let itemIndex = state.cart.cartItems.indexOf(cartItem)\n\n      state.wishlist.wishlistItems.splice(wishlistItem,1)\n      localStorage.setItem('wishlist',JSON.stringify(state.wishlist));\n  },\n    //SETTING AUTHENTICATION TOKEN\n    setToken(state,token){\n      state.token = token;\n      state.isAuthenticated = true\n    },\n    //REMOVING AUTHENTICATION TOKEN\n    removeToken(state){\n      state.token = ''\n      state.isAuthenticated = false\n    },\n    //CLEARING THE CART\n    clearCart(state) {\n      state.cart = { cartItems: [] }\n\n      localStorage.setItem('cart', JSON.stringify(state.cart))\n    }, \n    //CLEARING THE WISHLIST\n    clearCart(state) {\n      state.cart = { cartItems: [] }\n\n      localStorage.setItem('cart', JSON.stringify(state.cart))\n    },\n\n    setLoggedInUser(state, payload){\n      state.loggedInUser = payload\n    },\n  },\n  actions: {\n    getUserDetails({commit}){\n      axios.get('/api/v1/users/me/')\n      .then((response)=>{\n          commit('setLoggedInUser',response.data)\n      })\n      .catch((error)=>{\n        console.log(error)\n      })\n    },\n  },\n  modules: {\n  }\n})\n"]},"metadata":{},"sourceType":"module"}