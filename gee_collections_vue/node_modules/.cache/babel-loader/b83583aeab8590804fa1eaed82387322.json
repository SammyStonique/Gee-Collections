{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    cart: {\n      cartItems: []\n    },\n    token: '',\n    isAuthenticated: false,\n    loggedInUser: []\n  },\n  getters: {},\n  mutations: {\n    initializeStore(state) {\n      //Check if the cart exists in the local storage\n      if (localStorage.getItem('cart')) {\n        state.cart = JSON.parse(localStorage.getItem('cart')); //Add the cart to local storage if it doesn't exist\n      } else {\n        localStorage.setItem('cart', JSON.stringify(state.cart));\n      } //Checks if an authentication token is available in local storage\n\n\n      if (localStorage.getItem('token')) {\n        state.token = localStorage.getItem('token');\n        state.isAuthenticated = true;\n      } else {\n        state.token = '';\n        state.isAuthenticated = false;\n      }\n    },\n\n    addToCart(state, cartItem) {\n      //Checking if the cart has an item\n      if (state.cart.cartItems.length > 0) {\n        //Checking if an item exists in a cart\n        const exist = state.cart.cartItems.filter(i => {\n          return i.items.id === cartItem.items.id;\n        }); //If the item exists, increment its quantity in the cart\n\n        if (exist.length > 0) {\n          exist[0].quantity = parseInt(exist[0].quantity) + parseInt(cartItem.quantity); //If the item doesn't exist, push it to the cart\n        } else {\n          state.cart.cartItems.push(cartItem);\n        } //Save the cart to the local storage\n\n\n        localStorage.setItem('cart', JSON.stringify(state.cart));\n      } //Adding a new item to the cart and saving it to the local storage\n      else {\n        state.cart.cartItems.push(cartItem);\n        localStorage.setItem('cart', JSON.stringify(state.cart));\n      }\n    },\n\n    removeFromCart(state, cartItem) {\n      // let itemIndex = state.cart.cartItems.indexOf(cartItem)\n      state.cart.cartItems.splice(cartItem, 1);\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n    },\n\n    setToken(state, token) {\n      state.token = token;\n      state.isAuthenticated = true;\n    },\n\n    removeToken(state) {\n      state.token = '';\n      state.isAuthenticated = false;\n    },\n\n    clearCart(state) {\n      state.cart = {\n        cartItems: []\n      };\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n    },\n\n    setLoggedInUser(state, payload) {\n      state.loggedInUser = payload;\n    }\n\n  },\n  actions: {\n    getUserDetails({\n      commit\n    }) {\n      axios.get('/api/v1/users/me/').then(response => {\n        commit('setLoggedInUser', response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"sources":["/home/sammyb/gee_collections/gee_collections_vue/src/store/index.js"],"names":["createStore","axios","state","cart","cartItems","token","isAuthenticated","loggedInUser","getters","mutations","initializeStore","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","cartItem","length","exist","filter","i","items","id","quantity","parseInt","push","removeFromCart","splice","setToken","removeToken","clearCart","setLoggedInUser","payload","actions","getUserDetails","commit","get","then","response","data","catch","error","console","log","modules"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex'\nimport axios from 'axios'\n\nexport default createStore({\n  state: {\n    cart:{\n      cartItems:[]\n    },\n    token: '',\n    isAuthenticated: false,\n    loggedInUser: []\n  },\n  getters: {\n\n  },\n  mutations: {\n    initializeStore(state){\n      //Check if the cart exists in the local storage\n      if(localStorage.getItem('cart')){\n        state.cart = JSON.parse(localStorage.getItem('cart'))\n      //Add the cart to local storage if it doesn't exist\n      }else{\n        localStorage.setItem('cart',JSON.stringify(state.cart))\n      }\n      //Checks if an authentication token is available in local storage\n      if(localStorage.getItem('token')){\n        state.token = localStorage.getItem('token');\n        state.isAuthenticated = true;\n      }else{\n        state.token = '';\n        state.isAuthenticated = false;\n      }\n\n    },\n    addToCart(state, cartItem){\n      //Checking if the cart has an item\n      if(state.cart.cartItems.length > 0){\n        //Checking if an item exists in a cart\n        const exist = state.cart.cartItems.filter((i) => {\n          return i.items.id === cartItem.items.id;\n        })\n        //If the item exists, increment its quantity in the cart\n        if(exist.length > 0){\n          exist[0].quantity = parseInt(exist[0].quantity) + parseInt(cartItem.quantity)\n        //If the item doesn't exist, push it to the cart\n        }else{\n          state.cart.cartItems.push(cartItem)\n        }\n        //Save the cart to the local storage\n        localStorage.setItem('cart',JSON.stringify(state.cart));\n      }\n      //Adding a new item to the cart and saving it to the local storage\n      else {\n        state.cart.cartItems.push(cartItem)\n        localStorage.setItem('cart',JSON.stringify(state.cart));\n      }\n    },\n    removeFromCart(state, cartItem){\n        // let itemIndex = state.cart.cartItems.indexOf(cartItem)\n\n        state.cart.cartItems.splice(cartItem,1)\n        localStorage.setItem('cart',JSON.stringify(state.cart));\n    },\n    setToken(state,token){\n      state.token = token;\n      state.isAuthenticated = true\n    },\n    removeToken(state){\n      state.token = ''\n      state.isAuthenticated = false\n    },\n    clearCart(state) {\n      state.cart = { cartItems: [] }\n\n      localStorage.setItem('cart', JSON.stringify(state.cart))\n    },  \n    setLoggedInUser(state, payload){\n      state.loggedInUser = payload\n    }\n  },\n  actions: {\n    getUserDetails({commit}){\n      axios.get('/api/v1/users/me/')\n      .then((response)=>{\n          commit('setLoggedInUser',response.data)\n      })\n      .catch((error)=>{\n        console.log(error)\n      })\n    },\n  },\n  modules: {\n  }\n})\n"]},"metadata":{},"sourceType":"module"}