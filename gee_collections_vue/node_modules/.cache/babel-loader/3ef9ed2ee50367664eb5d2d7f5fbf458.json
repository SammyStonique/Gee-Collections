{"ast":null,"code":"export default {\n  data() {\n    return {\n      myEmoji: '\\u{1F62D}'\n    };\n  },\n\n  props: ['cart', 'items', 'remove'],\n  computed: {// cartItemTotal(){\n    //     let itemTotal = [];\n    //     for(let i = 0; i<this.cart.cartItems.length; i++){\n    //        let lineTotal = (this.cart.cartItems[i].quantity * this.cart.cartItems[i].items.price).toFixed(2)\n    //         itemTotal.push(lineTotal);\n    //     }\n    //     return itemTotal\n    // },\n  },\n  methods: {// incrementQuantity(){\n    //     let selectedItemQuantity = arguments[0];\n    //     this.cart.cartItems[selectedItemQuantity].quantity += 1;\n    //     this.updateCart();\n    // },\n    // decrementQuantity(){\n    //     let selectedItemQuantity = arguments[0];\n    //     this.cart.cartItems[selectedItemQuantity].quantity -= 1;\n    //     this.updateCart();\n    // },\n    // updateCart() {\n    //     localStorage.setItem('cart', JSON.stringify(this.$store.state.cart))\n    // },\n    // removeFromCart(){\n    //     let selectedItem = arguments[0];\n    //     this.cart.cartItems = this.cart.cartItems.filter(i => i.items.id !== this.cart.cartitems[selectedItem].id)\n    //     console.log(this.cart.cartItems)\n    // }\n  },\n\n  mounted() {\n    console.log(this.cart);\n  }\n\n};","map":{"version":3,"mappings":"AAyFA,eAAe;AACXA,MAAI,GAAE;AACF,WAAM;AACFC,aAAO,EAAC;AADN,KAAN;AAGH,GALU;;AAMXC,OAAK,EAAC,CAAC,MAAD,EAAQ,OAAR,EAAgB,QAAhB,CANK;AAOXC,UAAQ,EAAC,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARK,GAPE;AAkBXC,SAAO,EAAC,CACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBI,GAlBG;;AAuCXC,SAAO,GAAG;AACNC,WAAO,CAACC,GAAR,CAAY,KAAKC,IAAjB;AACH;;AAzCU,CAAf","names":["data","myEmoji","props","computed","methods","mounted","console","log","cart"],"sourceRoot":"","sources":["/home/sammyb/gee_collections/gee_collections_vue/src/views/CartView.vue"],"sourcesContent":["<template>\n    <div class=\"cart\">\n        <!-- Breadcrumb Start -->\n        <div class=\"breadcrumb-wrap\">\n            <div class=\"container-fluid\">\n                <ul class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n                    <li class=\"breadcrumb-item\"><a href=\"#\">Products</a></li>\n                    <li class=\"breadcrumb-item active\">Cart</li>\n                </ul>\n            </div>\n        </div>\n        <!-- Breadcrumb End -->\n        <!-- Cart Start -->\n        <div class=\"cart-page\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-lg-8\">\n                        <div class=\"cart-page-inner\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table table-bordered\">\n                                    <thead class=\"thead-dark\">\n                                        <tr>\n                                            <th>Product</th>\n                                            <th>Price</th>\n                                            <th>Quantity</th>\n                                            <th>Total</th>\n                                            <th>Remove</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody class=\"align-middle\">\n                                        <tr v-for=\"(prod,index) in cart\" :key=\"index\">\n                                            <td>\n                                                <div class=\"img\">\n                                                    <a href=\"#\"><img :src=\"`${prod[index].items.image}`\" alt=\"Image\"></a>\n                                                    <p>{{prod.items.name}}</p>\n                                                </div>\n                                            </td>\n                                            <td>{{Number(prod.items.price).toLocaleString()}}</td>\n                                            <td>\n                                                <div class=\"qty\">\n                                                    <button class=\"btn-minus\" @click=\"decrementQuantity(index)\"><i class=\"fa fa-minus\"></i></button>\n                                                    <input type=\"text\" :value=\"`${prod.quantity}`\">\n                                                    <button class=\"btn-plus\" @click=\"incrementQuantity(index)\"><i class=\"fa fa-plus\"></i></button>\n                                                </div>\n                                            </td>\n                                            <td>{{Number(cartItemTotal[index]).toLocaleString()}}</td>\n                                            <td><button @click=\"removeFromCart(prod)\"><i class=\"fa fa-trash\"></i></button></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                                <p class=\"empty-cart\" v-if=\"!Object.keys(cart).length\"><em style=\"font-size: 24px;\">{{myEmoji}}</em><em>Ooops,No items in cart</em></p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-4\">\n                        <div class=\"cart-page-inner\">\n                            <div class=\"row\">\n                                <div class=\"col-md-12\">\n                                    <div class=\"coupon\">\n                                        <input type=\"text\" placeholder=\"Coupon Code\">\n                                        <button>Apply Code</button>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-12\">\n                                    <div class=\"cart-summary\">\n                                        <div class=\"cart-content\">\n                                            <h1>Cart Summary</h1>\n                                            <p>Sub Total<span>$99</span></p>\n                                            <p>Shipping Cost<span>$1</span></p>\n                                            <h2>Grand Total<span>$100</span></h2>\n                                        </div>\n                                        <div class=\"cart-btn\">\n                                            <button>Update Cart</button>\n                                            <button>Checkout</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- Cart End -->\n    </div>\n</template>\n\n<script>\nexport default {\n    data(){\n        return{\n            myEmoji:'\\u{1F62D}',\n        }\n    },\n    props:['cart','items','remove'],\n    computed:{\n        // cartItemTotal(){\n        //     let itemTotal = [];\n        //     for(let i = 0; i<this.cart.cartItems.length; i++){\n        //        let lineTotal = (this.cart.cartItems[i].quantity * this.cart.cartItems[i].items.price).toFixed(2)\n        //         itemTotal.push(lineTotal);\n        //     }\n        //     return itemTotal\n        // },\n        \n    },\n    methods:{\n        // incrementQuantity(){\n        //     let selectedItemQuantity = arguments[0];\n        //     this.cart.cartItems[selectedItemQuantity].quantity += 1;\n        //     this.updateCart();\n        // },\n        // decrementQuantity(){\n        //     let selectedItemQuantity = arguments[0];\n        //     this.cart.cartItems[selectedItemQuantity].quantity -= 1;\n        //     this.updateCart();\n        // },\n        // updateCart() {\n        //     localStorage.setItem('cart', JSON.stringify(this.$store.state.cart))\n        // },\n        // removeFromCart(){\n        //     let selectedItem = arguments[0];\n        //     this.cart.cartItems = this.cart.cartItems.filter(i => i.items.id !== this.cart.cartitems[selectedItem].id)\n        //     console.log(this.cart.cartItems)\n        // }\n\n    },\n    mounted() {\n        console.log(this.cart)\n    },\n    \n}\n</script>\n\n<style scoped>\n    .empty-cart{\n        text-align: center;\n        font-size: 16px;\n        font-weight: bold;\n        margin: 20px;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}