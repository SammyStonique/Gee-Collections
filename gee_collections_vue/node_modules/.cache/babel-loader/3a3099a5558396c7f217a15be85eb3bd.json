{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"section\"\n};\nconst _hoisted_2 = {\n  class: \"pull-right\"\n};\nconst _hoisted_3 = {\n  class: \"pagination\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = [\"onClick\", \"disabled\"];\nconst _hoisted_6 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"ul\", null, [_createCommentVNode(\" <li>\\n                        <a\\n                            class=\\\"btn\\\"\\n                            @click.prevent=\\\"onClickFirstPage\\\" \\n                            :disabled=\\\"isInFirstPage\\\"\\n                        >\\n                        First\\n                        </a>\\n                    </li> \"), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    class: \"btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.onClickPreviousPage && $options.onClickPreviousPage(...args)),\n    disabled: $options.isInFirstPage\n  }, \" Prev \", 8\n  /* PROPS */\n  , _hoisted_4)]), _createCommentVNode(\" visible as start \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.pages, page => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: page.name\n    }, [_createElementVNode(\"a\", {\n      class: \"btn\",\n      onClick: $event => $options.onClickPage(page.name),\n      disabled: page.isDisabled\n    }, _toDisplayString(page.name), 9\n    /* TEXT, PROPS */\n    , _hoisted_5)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createCommentVNode(\" visible as end \"), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    class: \"btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.onClickNextPage && $options.onClickNextPage(...args)),\n    disabled: $options.isInLastPage\n  }, \" Next \", 8\n  /* PROPS */\n  , _hoisted_6)]), _createCommentVNode(\" <li>\\n                        <a\\n                            class=\\\"btn\\\"\\n                            @click=\\\"onClickLastPage\\\" \\n                            :disabled=\\\"isInLastPage\\\"\\n                        >\\n                        Last\\n                        </a>\\n                    </li> \")])])])]);\n}","map":{"version":3,"mappings":";;AACSA,OAAK,EAAC;;;AACFA,OAAK,EAAC;;;AACFA,OAAK,EAAC;;;;;;uBAFnBC,oBAwDM,KAxDN,cAwDM,CAvDFC,oBAsDM,KAtDN,cAsDM,CArDFA,oBAoDM,KApDN,cAoDM,CAnDFA,oBAkDK,IAlDL,EAkDK,IAlDL,EAkDK,CAjDDC,kVAiDC,EAxCDD,oBAQK,IARL,EAQK,IARL,EAQK,CAPDA,oBAMI,GANJ,EAMI;AALAF,SAAK,EAAC,KAKN;AAJCI,WAAK,yCAAEC,qEAAF,CAIN;AAHCC,YAAQ,EAAED;AAGX,GANJ,EAIC,QAJD,EAMA;AAAA;AANA,IAMAE,UANA,CAOC,CARL,CAwCC,EA9BDJ,yCA8BC,qBA7BDF,oBAQKO,SARL,EAQK,IARL,EAQKC,YARcJ,cAQd,EARMK,IAAa,IAAT;yBAAfT,oBAQK,IARL,EAQK;AARsBU,SAAG,EAAED,IAAI,CAACE;AAQhC,KARL,GACIV,oBAMI,GANJ,EAMI;AALAF,WAAK,EAAC,KAKN;AAJCI,aAAK,YAAEC,qBAAYK,IAAI,CAACE,IAAjB,CAIR;AAHCN,cAAQ,EAAEI,IAAI,CAACG;AAGhB,KANJ,mBAKEH,IAAI,CAACE,KALP,EAKW;AAAA;AALX,MAKWE,UALX,EADJ;GAQK,CARL;;AAAA,GA6BC,GApBDX,uCAoBC,EAlBDD,oBAQK,IARL,EAQK,IARL,EAQK,CAPDA,oBAMI,GANJ,EAMI;AALAF,SAAK,EAAC,KAKN;AAJCI,WAAK,yCAAEC,6DAAF,CAIN;AAHCC,YAAQ,EAAED;AAGX,GANJ,EAIC,QAJD,EAMA;AAAA;AANA,IAMAU,UANA,CAOC,CARL,CAkBC,EATDZ,uUASC,CAlDL,CAmDE,CApDN,CAqDE,CAtDN,CAuDE,CAxDN","names":["class","_createElementBlock","_createElementVNode","_createCommentVNode","onClick","$options","disabled","_hoisted_4","_Fragment","_renderList","page","key","name","isDisabled","_hoisted_5","_hoisted_6"],"sourceRoot":"","sources":["/home/sammyb/gee_collections/gee_collections_vue/src/components/Pagination.vue"],"sourcesContent":["<template>\n    <div class=\"section\"> \n        <div class=\"pull-right\">\n            <div class=\"pagination\">\n                <ul>\n                    <!-- <li>\n                        <a\n                            class=\"btn\"\n                            @click.prevent=\"onClickFirstPage\" \n                            :disabled=\"isInFirstPage\"\n                        >\n                        First\n                        </a>\n                    </li> -->\n                    <li>\n                        <a\n                            class=\"btn\"\n                            @click=\"onClickPreviousPage\" \n                            :disabled=\"isInFirstPage\"\n                        >\n                        Prev\n                        </a>\n                    </li>\n\n                    <!-- visible as start -->\n                    <li v-for=\"page in pages\" :key=\"page.name\">\n                        <a\n                            class=\"btn\"\n                            @click=\"onClickPage(page.name)\"\n                            :disabled=\"page.isDisabled\"\n                        >\n                        {{page.name}}\n                        </a>\n                    </li>\n                    <!-- visible as end -->\n\n                    <li>\n                        <a\n                            class=\"btn\"\n                            @click=\"onClickNextPage\" \n                            :disabled=\"isInLastPage\"\n                        >\n                        Next\n                        </a>\n                    </li>\n                    <!-- <li>\n                        <a\n                            class=\"btn\"\n                            @click=\"onClickLastPage\" \n                            :disabled=\"isInLastPage\"\n                        >\n                        Last\n                        </a>\n                    </li> -->\n                </ul>\n            </div>\n        </div>                \n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        maxVisibleButtons: {\n            type: Number,\n            required: false,\n            default: 5\n        },\n        totalPages: {\n            type: Number,\n            required: true,\n        },\n        totalItems: {\n            type: Number,\n            required: true\n        },\n        perPage: {\n            type: Number,\n            required: true,\n        },\n        currentPage: {\n            type: Number,\n            required: true\n        }\n    },\n\n    data() \n    {\n        return {\n            \n        }\n    },\n\n    computed: {\n        startPage() \n        {\n            if(this.currentPage === 1) // while on first page\n            {\n                return 1;\n            }\n            \n            if(this.currentPage === this.totalPages) // while on last page\n            {\n                return this.totalPages - this.maxVisibleButtons + 1;\n                // const start = this.totalPages - (this.maxVisibleButtons - 1);\n\n                // if(start === 0) \n                // {\n                //     return 1;\n                // }\n                // else \n                // {\n                //     return start;\n                // }\n            }\n\n            return this.currentPage - 1; // while in between fisrt and last\n        },\n\n        endPage() \n        {\n            return Math.min(this.startPage + this.maxVisibleButtons - 1, this.totalPages);\n        },\n\n        pages() \n        {\n            const pageRange = [];\n            // Math.min(this.startPage + this.maxVisiblePages - 1, this.totalPages) / this.endPage;\n\n            for(let i = this.startPage; i <= Math.min(this.startPage + this.maxVisibleButtons - 1, this.totalPages); i++)\n            {\n                pageRange.push({\n                    name: i,\n                    isDisabled: i === this.currentPage\n                });\n            }\n\n            return pageRange;\n        },\n\n        // for event listeners\n        isInFirstPage() \n        {\n            return this.currentPage === 1;\n        },\n        isInLastPage() \n        {\n            return this.currentPage === this.totalPages;\n        }\n    },\n\n    methods: {\n        onClickFirstPage() \n        {\n            this.$emit('page-changed', 1);\n        },\n        onClickPreviousPage() \n        {\n            this.$emit('page-changed', this.currentPage - 1);\n        },\n        onClickPage(page) \n        {\n            this.$emit('page-changed', page);\n        },\n        onClickNextPage() \n        {\n            this.$emit('page-changed', this.currentPage + 1);\n        },\n        onClickLastPage() \n        {\n            this.$emit('page-changed', this.totalPages);\n        },\n    },\n    mounted() \n    {\n        // console.log(`on pages ::: pages are ::: ${this.totalPages}`)\n    },\n\n    updated() \n    {\n        \n    }\n\n}\n</script>"]},"metadata":{},"sourceType":"module"}