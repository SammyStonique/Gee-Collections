{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: ['token', 'isAuthenticated'],\n\n  data() {\n    return {\n      username: '',\n      password: '',\n      errors: []\n    };\n  },\n\n  methods: {\n    userLogin() {\n      this.errors = [];\n\n      if (this.username === '' && this.password === '') {\n        this.errors.push('Please fill in the details');\n        this.$toast.error('Invalid username and password', {\n          duration: 3000\n        });\n      } else {\n        if (this.username === '') {\n          this.errors.push('Please enter your email');\n        }\n\n        if (this.password === '') {\n          this.errors.push('Please enter your password');\n        }\n      }\n\n      if (!this.errors.length) {\n        const formData = {\n          email: this.username,\n          password: this.password\n        };\n        this.axios.post('/api/v1/token/login/', formData).then(response => {\n          console.log(response.data);\n          const token = response.data.auth_token;\n          this.$store.commit('setToken', token);\n          axios.defaults.headers.common['Authorization'] = \"Token \" + token;\n          localStorage.setItem('token', token);\n          this.$toast.success('Login Succesful', {\n            duration: 5000\n          });\n          this.$router.push('/').catch(error => {\n            if (error.response) {\n              for (const property in error.response.data) {\n                this.errors.push(`${property}: ${error.response.data[property]}`);\n              }\n\n              console.log(JSON.stringify(error.response.data));\n            } else if (error.message) {\n              this.errors.push('Something went wrong. Please try again');\n              console.log(JSON.stringify(error));\n            }\n          });\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4CA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;AACXC,OAAK,EAAC,CAAC,OAAD,EAAS,iBAAT,CADK;;AAEXC,MAAI,GAAE;AACF,WAAM;AACFC,cAAQ,EAAC,EADP;AAEFC,cAAQ,EAAE,EAFR;AAGFC,YAAM,EAAE;AAHN,KAAN;AAKH,GARU;;AASXC,SAAO,EAAC;AACJC,aAAS,GAAE;AACP,WAAKF,MAAL,GAAc,EAAd;;AACA,UAAG,KAAKF,QAAL,KAAkB,EAAlB,IAAwB,KAAKC,QAAL,KAAkB,EAA7C,EAAgD;AAC5C,aAAKC,MAAL,CAAYG,IAAZ,CAAiB,4BAAjB;AACA,aAAKC,MAAL,CAAYC,KAAZ,CAAkB,+BAAlB,EAAmD;AAC/CC,kBAAQ,EAAE;AADqC,SAAnD;AAGH,OALD,MAKK;AACD,YAAG,KAAKR,QAAL,KAAiB,EAApB,EAAuB;AACnB,eAAKE,MAAL,CAAYG,IAAZ,CAAiB,yBAAjB;AACJ;;AACA,YAAG,KAAKJ,QAAL,KAAkB,EAArB,EAAwB;AACpB,eAAKC,MAAL,CAAYG,IAAZ,CAAiB,4BAAjB;AACJ;AACJ;;AAEA,UAAG,CAAC,KAAKH,MAAL,CAAYO,MAAhB,EAAuB;AACnB,cAAMC,QAAO,GAAI;AACbC,eAAK,EAAE,KAAKX,QADC;AAEbC,kBAAQ,EAAE,KAAKA;AAFF,SAAjB;AAKA,aAAKJ,KAAL,CACKe,IADL,CACU,sBADV,EACkCF,QADlC,EAEKG,IAFL,CAEWC,QAAD,IAAY;AACdC,iBAAO,CAACC,GAAR,CAAYF,QAAQ,CAACf,IAArB;AACA,gBAAMkB,KAAI,GAAIH,QAAQ,CAACf,IAAT,CAAcmB,UAA5B;AACA,eAAKC,MAAL,CAAYC,MAAZ,CAAmB,UAAnB,EAA+BH,KAA/B;AACApB,eAAK,CAACwB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,WAAWN,KAA5D;AACAO,sBAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BR,KAA7B;AACA,eAAKX,MAAL,CAAYoB,OAAZ,CAAoB,iBAApB,EAAsC;AAClClB,oBAAQ,EAAE;AADwB,WAAtC;AAGA,eAAKmB,OAAL,CAAatB,IAAb,CAAkB,GAAlB,EACHuB,KADG,CACIrB,KAAD,IAAS;AACZ,gBAAIA,KAAK,CAACO,QAAV,EAAoB;AAChB,mBAAK,MAAMe,QAAX,IAAuBtB,KAAK,CAACO,QAAN,CAAef,IAAtC,EAA4C;AACxC,qBAAKG,MAAL,CAAYG,IAAZ,CAAkB,GAAEwB,QAAS,KAAItB,KAAK,CAACO,QAAN,CAAef,IAAf,CAAoB8B,QAApB,CAA8B,EAA/D;AACJ;;AACAd,qBAAO,CAACC,GAAR,CAAYc,IAAI,CAACC,SAAL,CAAexB,KAAK,CAACO,QAAN,CAAef,IAA9B,CAAZ;AACJ,aALA,MAKO,IAAIQ,KAAK,CAACyB,OAAV,EAAmB;AACtB,mBAAK9B,MAAL,CAAYG,IAAZ,CAAiB,wCAAjB;AACAU,qBAAO,CAACC,GAAR,CAAYc,IAAI,CAACC,SAAL,CAAexB,KAAf,CAAZ;AACJ;AACH,WAXG;AAYP,SAvBD;AAwBJ;AAEJ;;AAjDI;AATG,CAAf","names":["axios","props","data","username","password","errors","methods","userLogin","push","$toast","error","duration","length","formData","email","post","then","response","console","log","token","auth_token","$store","commit","defaults","headers","common","localStorage","setItem","success","$router","catch","property","JSON","stringify","message"],"sourceRoot":"","sources":["/home/sammyb/gee_collections/gee_collections_vue/src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div class=\"login\">\n        <!-- Breadcrumb Start -->\n        <div class=\"breadcrumb-wrap\">\n            <div class=\"container-fluid login-breadcrumb\">\n                <ul class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n                    <li class=\"breadcrumb-item active\">Login</li>\n                </ul>\n            </div>\n        </div>\n        <!-- Breadcrumb End -->\n        <div class=\"login\">\n            <div class=\"container-fluid user-login-container\">\n                <div class=\"user-login-form\">\n                    <form action=\"\" @submit.prevent=\"userLogin\">\n                        <div class=\"col-md-6\">\n                            <label>Email</label>\n                            <input class=\"form-control\" type=\"email\" placeholder=\"Enter your email\" v-model=\"username\">\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label>Password</label>\n                            <input class=\"form-control\" type=\"password\" placeholder=\"Password\" v-model=\"password\">\n                        </div>\n                        <div class=\"col-md-12 notification is-danger\" v-if=\"errors.length\">\n                            <p style=\"color: red;\" v-for=\"error in errors\" v-bind:key=\"error\">{{ error }}</p>\n                        </div>\n                        <div class=\"col-md-12\">\n                            <div class=\"custom-control custom-checkbox\">\n                                <input type=\"checkbox\" class=\"custom-control-input\" id=\"newaccount\">\n                                <label class=\"custom-control-label\" for=\"newaccount\">Keep me signed in</label>\n                            </div>\n                        </div>\n                        <div class=\"col-md-12\">\n                            <button class=\"btn login-btn\">Login</button>\n                        </div>\n                    </form>\n                </div>     \n            </div>\n        </div>    \n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    props:['token','isAuthenticated'],\n    data(){\n        return{\n            username:'',\n            password: '',\n            errors: [],\n        }\n    },\n    methods:{\n        userLogin(){\n            this.errors = [];\n            if(this.username === '' && this.password === ''){\n                this.errors.push('Please fill in the details')\n                this.$toast.error('Invalid username and password', {\n                    duration: 3000\n                })\n            }else{\n                if(this.username ===''){\n                    this.errors.push('Please enter your email')\n                }\n                if(this.password === ''){\n                    this.errors.push('Please enter your password')\n                }\n            }\n\n            if(!this.errors.length){\n                const formData = {\n                    email: this.username,\n                    password: this.password\n                }\n\n                this.axios\n                    .post('/api/v1/token/login/', formData)\n                    .then((response)=>{\n                        console.log(response.data)\n                        const token = response.data.auth_token;       \n                        this.$store.commit('setToken', token);\n                        axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                        localStorage.setItem('token',token)\n                        this.$toast.success('Login Succesful',{\n                            duration: 5000\n                        })\n                        this.$router.push('/')\n                    .catch((error)=>{\n                        if (error.response) {\n                            for (const property in error.response.data) {\n                                this.errors.push(`${property}: ${error.response.data[property]}`)\n                            }\n                            console.log(JSON.stringify(error.response.data))\n                        } else if (error.message) {\n                            this.errors.push('Something went wrong. Please try again')\n                            console.log(JSON.stringify(error))\n                        }\n                    })\n                })\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n    .user-login-container{\n        width: 80%;\n    }\n    .login-breadcrumb{\n        width: 80%;\n    }\n    .login-btn{\n        width: 20%;\n    }\n    .login-form{\n        max-width: 80%;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}