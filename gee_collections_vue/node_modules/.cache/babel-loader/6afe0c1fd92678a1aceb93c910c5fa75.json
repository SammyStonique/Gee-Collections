{"ast":null,"code":"import swal from 'sweetalert';\nimport Pagination from \"@/components/Pagination.vue\";\nexport default {\n  data() {\n    return {\n      myEmoji: '\\u{1F62D}',\n      pageOfItems: []\n    };\n  },\n\n  props: ['cart', 'items', 'cartGrandTotal', 'cartItemTotal', 'cartSubTotal', 'shippingCost'],\n  components: {\n    Pagination\n  },\n  computed: {\n    prodCartItemTotal() {\n      let itemTotal = [];\n\n      for (let i = 0; i < this.pageOfItems.cartItems.length; i++) {\n        let lineTotal = (this.pageOfItems[i].items.quantity * this.pageOfItems.cartItems[i].items.price).toFixed(2);\n        itemTotal.push(lineTotal);\n      }\n\n      return itemTotal;\n    }\n\n  },\n  methods: {\n    onChangePage(pageOfItems) {\n      // update page of items\n      this.pageOfItems = pageOfItems;\n      console.log(this.pageOfItems[0]);\n    },\n\n    incrementQuantity() {\n      let selectedItemQuantity = arguments[0];\n      this.pageOfItems[selectedItemQuantity].quantity += 1;\n      this.updateCart();\n    },\n\n    decrementQuantity() {\n      let selectedItemQuantity = arguments[0];\n\n      if (this.pageOfItems[selectedItemQuantity].quantity >= 2) {\n        this.pageOfItems[selectedItemQuantity].quantity -= 1;\n      } else {\n        this.$store.commit('removeFromCart', selectedItemQuantity);\n      }\n\n      this.updateCart();\n    },\n\n    updateCart() {\n      localStorage.setItem('cart', JSON.stringify(this.$store.state.cart));\n    },\n\n    removeFromCart() {\n      let selectedItem = arguments[0];\n      swal({\n        title: \"Are you sure?\",\n        text: `Do you wish to remove ${this.cart[selectedItem].items.name} from your cart?`,\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(willDelete => {\n        if (willDelete) {\n          this.$store.commit('removeFromCart', selectedItem);\n          swal(\"Poof! Item removed succesfully!\", {\n            icon: \"success\"\n          });\n        } else {\n          swal(\"Your item is safely in the cart!\");\n        }\n      });\n    }\n\n  },\n\n  mounted() {\n    console.log(this.cart);\n  }\n\n};","map":{"version":3,"mappings":"AAkGA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,eAAe;AACXC,MAAI,GAAE;AACF,WAAM;AACFC,aAAO,EAAC,WADN;AAEFC,iBAAW,EAAE;AAFX,KAAN;AAIH,GANU;;AAOXC,OAAK,EAAC,CAAC,MAAD,EAAQ,OAAR,EAAgB,gBAAhB,EAAiC,eAAjC,EAAiD,cAAjD,EAAgE,cAAhE,CAPK;AAQXC,YAAU,EAAC;AACPL;AADO,GARA;AAWXM,UAAQ,EAAC;AACLC,qBAAiB,GAAE;AACf,UAAIC,SAAQ,GAAI,EAAhB;;AACA,WAAI,IAAIC,IAAI,CAAZ,EAAeA,CAAC,GAAC,KAAKN,WAAL,CAAiBO,SAAjB,CAA2BC,MAA5C,EAAoDF,CAAC,EAArD,EAAwD;AACpD,YAAIG,SAAQ,GAAI,CAAC,KAAKT,WAAL,CAAiBM,CAAjB,EAAoBI,KAApB,CAA0BC,QAA1B,GAAqC,KAAKX,WAAL,CAAiBO,SAAjB,CAA2BD,CAA3B,EAA8BI,KAA9B,CAAoCE,KAA1E,EAAiFC,OAAjF,CAAyF,CAAzF,CAAhB;AACAR,iBAAS,CAACS,IAAV,CAAeL,SAAf;AACJ;;AACA,aAAOJ,SAAP;AACH;;AARI,GAXE;AAqBXU,SAAO,EAAC;AACJC,gBAAY,CAAChB,WAAD,EAAc;AACtB;AACA,WAAKA,WAAL,GAAmBA,WAAnB;AACAiB,aAAO,CAACC,GAAR,CAAY,KAAKlB,WAAL,CAAiB,CAAjB,CAAZ;AACH,KALG;;AAMJmB,qBAAiB,GAAE;AACf,UAAIC,oBAAmB,GAAIC,SAAS,CAAC,CAAD,CAApC;AACA,WAAKrB,WAAL,CAAiBoB,oBAAjB,EAAuCT,QAAvC,IAAmD,CAAnD;AACA,WAAKW,UAAL;AACH,KAVG;;AAWJC,qBAAiB,GAAE;AACf,UAAIH,oBAAmB,GAAIC,SAAS,CAAC,CAAD,CAApC;;AACA,UAAG,KAAKrB,WAAL,CAAiBoB,oBAAjB,EAAuCT,QAAvC,IAAkD,CAArD,EAAuD;AACnD,aAAKX,WAAL,CAAiBoB,oBAAjB,EAAuCT,QAAvC,IAAmD,CAAnD;AACJ,OAFA,MAGI;AACA,aAAKa,MAAL,CAAYC,MAAZ,CAAmB,gBAAnB,EAAoCL,oBAApC;AACJ;;AACA,WAAKE,UAAL;AACH,KApBG;;AAqBJA,cAAU,GAAG;AACTI,kBAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe,KAAKL,MAAL,CAAYM,KAAZ,CAAkBC,IAAjC,CAA7B;AACH,KAvBG;;AAwBJC,kBAAc,GAAE;AACZ,UAAIC,YAAW,GAAIZ,SAAS,CAAC,CAAD,CAA5B;AACAzB,UAAI,CAAC;AACDsC,aAAK,EAAE,eADN;AAEDC,YAAI,EAAG,yBAAwB,KAAKJ,IAAL,CAAUE,YAAV,EAAwBvB,KAAxB,CAA8B0B,IAAI,kBAFhE;AAGDC,YAAI,EAAE,SAHL;AAIDC,eAAO,EAAE,IAJR;AAKDC,kBAAU,EAAE;AALX,OAAD,CAAJ,CAOCC,IAPD,CAOOC,UAAD,IAAgB;AAClB,YAAIA,UAAJ,EAAgB;AACZ,eAAKjB,MAAL,CAAYC,MAAZ,CAAmB,gBAAnB,EAAoCQ,YAApC;AACArC,cAAI,CAAC,iCAAD,EAAoC;AACxCyC,gBAAI,EAAE;AADkC,WAApC,CAAJ;AAGJ,SALA,MAKO;AACHzC,cAAI,CAAC,kCAAD,CAAJ;AACJ;AACH,OAhBD;AAiBH;;AA3CG,GArBG;;AAmEX8C,SAAO,GAAG;AACNzB,WAAO,CAACC,GAAR,CAAY,KAAKa,IAAjB;AACH;;AArEU,CAAf","names":["swal","Pagination","data","myEmoji","pageOfItems","props","components","computed","prodCartItemTotal","itemTotal","i","cartItems","length","lineTotal","items","quantity","price","toFixed","push","methods","onChangePage","console","log","incrementQuantity","selectedItemQuantity","arguments","updateCart","decrementQuantity","$store","commit","localStorage","setItem","JSON","stringify","state","cart","removeFromCart","selectedItem","title","text","name","icon","buttons","dangerMode","then","willDelete","mounted"],"sourceRoot":"","sources":["/home/sammyb/gee_collections/gee_collections_vue/src/views/CartView.vue"],"sourcesContent":["<template>\n    <div class=\"cart\">\n        <!-- Breadcrumb Start -->\n        <div class=\"breadcrumb-wrap\">\n            <div class=\"container-fluid\">\n                <ul class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n                    <li class=\"breadcrumb-item\"><a href=\"#\">Products</a></li>\n                    <li class=\"breadcrumb-item active\">Cart</li>\n                </ul>\n            </div>\n        </div>\n        <!-- Breadcrumb End -->\n        <!-- Cart Start -->\n        <div class=\"cart-page\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-lg-8\">\n                        <div class=\"cart-page-inner\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table table-bordered\">\n                                    <thead class=\"thead-dark\">\n                                        <tr>\n                                            <th>Product</th>\n                                            <th>Price</th>\n                                            <th>Quantity</th>\n                                            <th>Total</th>\n                                            <th>Remove</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody class=\"align-middle\">\n                                        <tr v-for=\"prod,index in pageOfItems\" :key=\"index\">\n                                            <td>\n                                                <div class=\"img\">\n                                                    <a href=\"#\"><img :src=\"`${prod.items.image}`\" alt=\"Image\"></a>\n                                                    <p>{{prod.items.name}}</p>\n                                                </div>\n                                            </td>\n                                            <td>{{Number(prod.items.price).toLocaleString()}}</td>\n                                            <td>\n                                                <div class=\"qty\">\n                                                    <button class=\"btn-minus\" @click=\"decrementQuantity(index)\"><i class=\"fa fa-minus\"></i></button>\n                                                    <input type=\"text\" :value=\"`${prod.quantity}`\">\n                                                    <button class=\"btn-plus\" @click=\"incrementQuantity(index)\"><i class=\"fa fa-plus\"></i></button>\n                                                </div>\n                                            </td>\n                                            <td>{{Number(cartItemTotal[index]).toLocaleString()}}</td>\n                                            <td><button @click=\"removeFromCart(index)\"><i class=\"fa fa-trash\"></i></button></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                                <p class=\"empty-cart\" v-if=\"!Object.keys(cart).length\"><span class=\"emoji \" role=\"img\" aria-label=\"\">ðŸ˜­</span><br/><em class=\"empty-cart-message\">Ooops,No items in cart</em></p>\n                                <!-- PAGINATION -->\n                                    <div class=\"row\">\n                                        <Pagination\n                                            :items=\"cart\"\n                                            @changePage=\"onChangePage\"\n                                            :pageSize=2\n                                        />\n                                    </div>\n                                    <!-- pagination end -->\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-4\">\n                        <div class=\"cart-page-inner\">\n                            <div class=\"row\">\n                                <div class=\"col-md-12\">\n                                    <div class=\"coupon\">\n                                        <input type=\"text\" placeholder=\"Coupon Code\">\n                                        <button>Apply Code</button>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-12\">\n                                    <div class=\"cart-summary\">\n                                        <div class=\"cart-content\">\n                                            <h1>Cart Summary</h1>\n                                            <p>Sub Total<span>ksh. {{Number(cartSubTotal).toLocaleString()}}</span></p>\n                                            <p>Delivery Fee(varies)<span>ksh. {{Number(shippingCost).toLocaleString()}}</span></p>\n                                            <h2>Grand Total<span>{{Number(cartGrandTotal).toLocaleString()}}</span></h2>\n                                        </div>\n                                        <div class=\"cart-btn\">\n                                            <button><router-link to=\"/products\" class=\"check-btn\">Update Cart</router-link></button>                      \n                                            <button v-if=\"cart.length\"><router-link to=\"/checkout\" class=\"checkout\">Checkout</router-link></button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- Cart End -->\n    </div>\n</template>\n\n<script>\nimport swal from 'sweetalert';\nimport Pagination from \"@/components/Pagination.vue\"\n\nexport default {\n    data(){\n        return{\n            myEmoji:'\\u{1F62D}',\n            pageOfItems: []\n        }\n    },\n    props:['cart','items','cartGrandTotal','cartItemTotal','cartSubTotal','shippingCost'],\n    components:{\n        Pagination\n    },\n    computed:{\n        prodCartItemTotal(){\n            let itemTotal = [];\n            for(let i = 0; i<this.pageOfItems.cartItems.length; i++){\n                let lineTotal = (this.pageOfItems[i].items.quantity * this.pageOfItems.cartItems[i].items.price).toFixed(2)\n                itemTotal.push(lineTotal);\n            }\n            return itemTotal\n        },\n    },\n    methods:{\n        onChangePage(pageOfItems) {\n            // update page of items\n            this.pageOfItems = pageOfItems;\n            console.log(this.pageOfItems[0])\n        },\n        incrementQuantity(){\n            let selectedItemQuantity = arguments[0];\n            this.pageOfItems[selectedItemQuantity].quantity += 1;\n            this.updateCart();\n        },\n        decrementQuantity(){\n            let selectedItemQuantity = arguments[0];\n            if(this.pageOfItems[selectedItemQuantity].quantity >=2){\n                this.pageOfItems[selectedItemQuantity].quantity -= 1;\n            }\n            else{\n                this.$store.commit('removeFromCart',selectedItemQuantity);\n            }\n            this.updateCart();\n        },\n        updateCart() {\n            localStorage.setItem('cart', JSON.stringify(this.$store.state.cart))\n        },\n        removeFromCart(){\n            let selectedItem = arguments[0];\n            swal({\n                title: \"Are you sure?\",\n                text: `Do you wish to remove ${this.cart[selectedItem].items.name} from your cart?`,\n                icon: \"warning\",\n                buttons: true,\n                dangerMode: true,\n                })\n            .then((willDelete) => {\n                if (willDelete) {\n                    this.$store.commit('removeFromCart',selectedItem);\n                    swal(\"Poof! Item removed succesfully!\", {\n                    icon: \"success\",\n                    });\n                } else {\n                    swal(\"Your item is safely in the cart!\");\n                }\n            });\n        },\n\n    },\n    mounted() {\n        console.log(this.cart)\n    },\n    \n}\n</script>\n\n<style scoped>\n    .empty-cart{\n        text-align: center;\n        font-size: 20px;\n        font-weight: bold;\n        margin: 20px;\n    }\n    .emoji{\n        font-size: 36px;\n        font-style: normal;\n    }\n    .checkout{\n        color: white;\n    }\n    .checkout:hover{\n        color: #FF6F61;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}