{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: ['token', 'isAuthenticated'],\n\n  data() {\n    return {\n      email: '',\n      password: '',\n      errors: [],\n      showPass: false,\n      passType: false\n    };\n  },\n\n  methods: {\n    showPassword() {\n      if (!this.showPass) {\n        this.showPass = true;\n        this.passType = true;\n      } else {\n        this.showPass = false;\n        this.passType = false;\n      }\n    },\n\n    userLogin() {\n      this.errors = [];\n\n      if (this.email === '' && this.password === '') {\n        this.errors.push('Please fill in the details');\n        this.$toast.error('Invalid email and password', {\n          duration: 5000\n        });\n      } else {\n        if (this.email === '') {\n          this.errors.push('Please enter your email');\n        }\n\n        if (this.password === '') {\n          this.errors.push('Please enter your password');\n        }\n      }\n\n      if (!this.errors.length) {\n        const formData = {\n          email: this.email,\n          password: this.password\n        };\n        this.axios.post('/api/v1/token/login/', formData).then(response => {\n          const token = response.data.auth_token;\n          this.$store.commit('setToken', token);\n          axios.defaults.headers.common['Authorization'] = \"Token \" + token;\n          localStorage.setItem('token', token);\n          this.$toast.success('Login Succesful', {\n            duration: 5000\n          });\n          this.$router.push('/');\n          this.$store.commit('reloadingPage');\n        }).catch(error => {\n          if (error.response) {\n            for (const property in error.response.data) {\n              this.errors.push(`${error.response.data[property]}`);\n            }\n\n            console.log(JSON.stringify(error.response.data));\n            this.$toast.error('Invalid Login Credentials!', {\n              duration: 5000\n            });\n          } else if (error.message) {\n            this.errors.push('Something went wrong. Please try again');\n            console.log(JSON.stringify(error));\n          }\n        }).finally(() => {});\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","props","data","email","password","errors","showPass","passType","methods","showPassword","userLogin","push","$toast","error","duration","length","formData","post","then","response","token","auth_token","$store","commit","defaults","headers","common","localStorage","setItem","success","$router","catch","property","console","log","JSON","stringify","message","finally"],"sourceRoot":"","sources":["/home/sammyb/gee_collections/gee_collections_vue/src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div class=\"login\">\n        <!-- Breadcrumb Start -->\n        <div class=\"breadcrumb-wrap\">\n            <div class=\"container-fluid login-breadcrumb\">\n                <ul class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n                    <li class=\"breadcrumb-item active\">Login</li>\n                </ul>\n            </div>\n        </div>\n        <!-- Breadcrumb End -->\n        <div class=\"login\">\n            <div class=\"container-fluid user-login-container\">\n                <div class=\"user-login-form\">\n                    <form action=\"\" @submit.prevent=\"userLogin\">\n                        <div class=\"col-md-6\">\n                            <label>Email</label>\n                            <input class=\"form-control\" type=\"email\" placeholder=\"Enter your email\" v-model=\"email\" required>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label>Password</label>\n                            <input class=\"form-control\" :type=\"passType ? 'text' : 'password'\" placeholder=\"Password\" v-model=\"password\" required>\n                            <button type=\"button\" class=\"show-password\" @click=\"showPassword()\">\n                            <i class=\"fa fa-eye\" v-if=\"!passType\"></i>\n                            <i class=\"fa fa-eye-slash\" v-else></i>\n                            </button>\n                        </div>\n                        <div class=\"col-md-12 notification is-danger\" v-if=\"errors.length\">\n                            <p style=\"color: red;\" v-for=\"error in errors\" v-bind:key=\"error\">{{ error }}</p>\n                        </div>\n                        <div class=\"col-md-12\">\n                            <div class=\"custom-control custom-checkbox\">\n                                <input type=\"checkbox\" class=\"custom-control-input\" id=\"newaccount\">\n                                <label class=\"custom-control-label\" for=\"newaccount\">Keep me signed in</label>\n                            </div>\n                        </div>\n                        <div class=\"col-md-12\" style=\"font-size: 12px;\">\n                            <label for=\"\">Don't have an account? </label>\n                            <router-link to=\"/register\"> Register</router-link>\n                        </div>\n                        <div class=\"col-md-12\">\n                            <button class=\"btn login-btn\">Login</button>\n                        </div>\n                    </form>\n                </div>     \n            </div>\n        </div>    \n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    props:['token','isAuthenticated'],\n    data(){\n        return{\n            email:'',\n            password: '',\n            errors: [],\n            showPass: false,\n            passType: false\n        }\n    },\n    methods:{ \n        showPassword(){\n            if(!this.showPass){\n                this.showPass = true;\n                this.passType = true;\n            }\n            else{\n                this.showPass = false;\n                this.passType = false;\n            }\n        },     \n        userLogin(){\n            this.errors = [];\n            if(this.email === '' && this.password === ''){\n                this.errors.push('Please fill in the details')\n                this.$toast.error('Invalid email and password', {\n                    duration: 5000\n                })\n            }else{\n                if(this.email ===''){\n                    this.errors.push('Please enter your email')\n                }\n                if(this.password === ''){\n                    this.errors.push('Please enter your password')\n                }\n            }\n\n            if(!this.errors.length){\n                const formData = {\n                    email: this.email,\n                    password: this.password\n                }\n\n                this.axios\n                    .post('/api/v1/token/login/', formData)\n                    .then((response)=>{\n                        const token = response.data.auth_token;       \n                        this.$store.commit('setToken', token);\n                        axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                        localStorage.setItem('token',token)\n                        this.$toast.success('Login Succesful',{\n                            duration: 5000\n                        })\n                        this.$router.push('/')\n                        this.$store.commit('reloadingPage')\n                    })    \n                    .catch((error)=>{\n                        if (error.response) {\n                            for (const property in error.response.data) {\n                                this.errors.push(`${error.response.data[property]}`)\n                            }\n                            console.log(JSON.stringify(error.response.data))\n                            this.$toast.error('Invalid Login Credentials!',{\n                                duration:5000\n                            })\n                        } else if (error.message) {\n                            this.errors.push('Something went wrong. Please try again')\n                            console.log(JSON.stringify(error))\n                        }\n                    })\n                    .finally(()=>{\n                        \n                    })\n            }\n            \n        }\n    }\n}\n</script>\n\n<style scoped> \n    input{\n        font-weight: 300;\n        color: black;\n    }\n    .user-login-container{\n        width: 80%;\n    }\n    .login-breadcrumb{\n        width: 80%;\n    }\n    .login-btn{\n        width: 20%;\n    }\n    .login-form{\n        max-width: 80%;\n    }\n    input{\n        font-weight: 300;\n        color: black;\n    }\n    .show-password{\n        float: right;\n        margin-top: -50px;\n        position: relative;\n        z-index: 1;\n        cursor:pointer;\n        height: 35px;\n        border:0px;\n        background-color: inherit;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}