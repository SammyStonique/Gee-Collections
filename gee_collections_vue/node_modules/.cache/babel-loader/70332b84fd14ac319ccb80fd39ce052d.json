{"ast":null,"code":"import { ref, reactive } from \"vue\";\nexport default {\n  props: [\"getAllCustomers\", \"customersArray\", 'showClientOrders', 'myOrders'],\n\n  // setup(){\n  //     const selectedCustomer = ref(null)\n  //     const state = reactive({\n  //         customer: \"\",\n  //         date: \"\",\n  //         order: \"\",\n  //         reference_no: \"\",\n  //         payment_method: \"\",\n  //         amount: 0,\n  //         orders: [],\n  //         customerOrders: [],\n  //         email: \"\",\n  //     });\n  //     const showOrders = ()=>{\n  //        state.email = this.customersArray[selectedCustomer.selectedIndex].email;\n  //        console.log(\"The email is \", state.email)\n  //        console.log(\"The selcted index is \",selectedCustomer.selectedIndex)\n  //         // this.axios\n  //         // .get(`api/v1/orders/${user}/`)\n  //         // .then((response) => {\n  //         //     state.orders = response.data;\n  //         //     state.customerOrders = state.orders[selectedCustomer.selectedIndex];\n  //         // })\n  //         // .catch((error) => {\n  //         // console.log(error);\n  //         // });\n  //     }\n  //     return{\n  //         selectedCustomer, showOrders\n  //     }\n  // },\n  data() {\n    return {\n      email: \"\",\n      selectedCust: 0,\n      orders: [],\n      cstOrders: [],\n      errors: [],\n      receipt_date: \"\",\n      payment_method: \"\",\n      reference_no: \"\",\n      amount_received: 0,\n      customer: \"\",\n      customer_order: \"\"\n    };\n  },\n\n  methods: {\n    showOrders() {\n      this.cstOrders = [];\n      this.selectedCust = this.$refs.customerSelect.selectedIndex - 1;\n      this.email = this.customersArray[this.selectedCust].email;\n      this.axios.get(`api/v1/orders/?=${this.email}/`).then(response => {\n        this.orders = response.data;\n\n        for (let i = 0; i < this.orders.length; i++) {\n          if (this.orders[i].user == this.email && this.orders[i].paid == false) {\n            this.cstOrders.push(this.orders[i]);\n          }\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    createReceipt() {\n      this.errors = [];\n    }\n\n  },\n\n  mounted() {\n    this.getAllCustomers();\n  }\n\n};","map":{"version":3,"mappings":"AAsGA,SAAQA,GAAR,EAAaC,QAAb,QAA4B,KAA5B;AACA,eAAc;AACVC,OAAK,EAAE,CAAC,iBAAD,EAAoB,gBAApB,EAAsC,kBAAtC,EAAyD,UAAzD,CADG;;AAEV;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAI,GAAE;AACF,WAAM;AACFC,WAAK,EAAE,EADL;AAEFC,kBAAY,EAAE,CAFZ;AAGFC,YAAM,EAAE,EAHN;AAIFC,eAAS,EAAE,EAJT;AAKFC,YAAM,EAAE,EALN;AAMFC,kBAAY,EAAE,EANZ;AAOFC,oBAAc,EAAE,EAPd;AAQFC,kBAAY,EAAE,EARZ;AASFC,qBAAe,EAAE,CATf;AAUFC,cAAQ,EAAE,EAVR;AAWFC,oBAAc,EAAE;AAXd,KAAN;AAaH,GAnDS;;AAoDVC,SAAM,EAAG;AACLC,cAAU,GAAE;AACR,WAAKT,SAAL,GAAiB,EAAjB;AACA,WAAKF,YAAL,GAAoB,KAAKY,KAAL,CAAWC,cAAX,CAA0BC,aAA1B,GAA0C,CAA9D;AACA,WAAKf,KAAL,GAAa,KAAKgB,cAAL,CAAoB,KAAKf,YAAzB,EAAuCD,KAApD;AAEA,WAAKiB,KAAL,CACCC,GADD,CACM,mBAAkB,KAAKlB,KAAM,GADnC,EAECmB,IAFD,CAEOC,QAAD,IAAc;AAChB,aAAKlB,MAAL,GAAckB,QAAQ,CAACrB,IAAvB;;AACA,aAAI,IAAIsB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKnB,MAAL,CAAYoB,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACnC,cAAG,KAAKnB,MAAL,CAAYmB,CAAZ,EAAeE,IAAf,IAAuB,KAAKvB,KAA5B,IAAqC,KAAKE,MAAL,CAAYmB,CAAZ,EAAeG,IAAf,IAAuB,KAA/D,EAAqE;AACjE,iBAAKrB,SAAL,CAAesB,IAAf,CAAoB,KAAKvB,MAAL,CAAYmB,CAAZ,CAApB;AACJ;AACJ;AACH,OATD,EAUCK,KAVD,CAUQC,KAAD,IAAW;AAClBC,eAAO,CAACC,GAAR,CAAYF,KAAZ;AACC,OAZD;AAaH,KAnBI;;AAoBLG,iBAAa,GAAE;AACX,WAAK1B,MAAL,GAAc,EAAd;AAEJ;;AAvBK,GApDC;;AA8EV2B,SAAO,GAAE;AACL,SAAKC,eAAL;AACJ;;AAhFU,CAAd","names":["ref","reactive","props","data","email","selectedCust","orders","cstOrders","errors","receipt_date","payment_method","reference_no","amount_received","customer","customer_order","methods","showOrders","$refs","customerSelect","selectedIndex","customersArray","axios","get","then","response","i","length","user","paid","push","catch","error","console","log","createReceipt","mounted","getAllCustomers"],"sourceRoot":"","sources":["/home/sammyb/gee_collections/gee_collections_vue/src/views/ReceiptAddView.vue"],"sourcesContent":["<template>\n    <!-- Breadcrumb Start -->\n    <div class=\"breadcrumb-wrap\">\n      <div class=\"container-fluid\">\n        <ul class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n          <li class=\"breadcrumb-item\"><router-link to=\"/cart\">Receipts</router-link></li>\n          <li class=\"breadcrumb-item active\">New Receipt</li>\n        </ul>\n      </div>\n    </div>\n    <!-- Breadcrumb End -->\n    <!-- Checkout Start -->\n    <div class=\"receipt-add w-full px-16 py-10\">\n        <div class=\"bg-white py-10\">\n            <form action=\"\" @submit.prevent=\"\">\n                <div class=\"flex\">\n                    <div class=\"basis-1/2 px-20\">\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <p><strong>Customer :</strong></p>\n                            </div>\n                            <div class=\"basis-1/2\">\n                                <select name=\"customer\" ref=\"customerSelect\" id=\"selectCustomer\" class=\"form-control\" @change=\"showOrders\" onfocus=\"this.selectedIndex = -1;\" v-model=\"customer\">\n                                    <option value=\"\" disabled=\"true\" selected>--Select Customer--</option>\n                                    <option v-for=\"cust in customersArray\">{{ cust.first_name }} {{ cust.last_name }}</option> \n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <p><strong>Receipt Date :</strong></p>\n                            </div>\n                            <div class=\"basis-1/2\">\n                                <input type=\"date\" name=\"\" id=\"\" class=\"form-control\" v-model=\"receipt_date\">\n                            </div>\n                        </div>\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <p><strong>Payment Method :</strong></p>\n                            </div>\n                            <div class=\"basis-1/2\">\n                                <select name=\"payment-method\" id=\"\" class=\"form-control\" v-model=\"payment_method\">\n                                    <option value=\"\" disabled=\"true\">--Select Payment Method--</option>\n                                    <option value=\"Cash\">Cash</option>\n                                    <option value=\"Mpesa\">Mpesa</option>\n                                    <option value=\"Cheque\">Cheque</option>\n                                    <option value=\"EFT\">EFT</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"col-md-12 notification is-danger\" v-if=\"errors.length\">\n                            <p style=\"color: red\" v-for=\"error in errors\" v-bind:key=\"error\">\n                                {{ error }}\n                            </p>\n                        </div>\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <button type=\"submit\" class=\"save-button rounded w-24 px-3 py-2\">Save</button>\n                            </div>\n                            <div class=\"basis-1/2\">\n                                <button type=\"reset\" class=\"reset-button rounded w-24 px-3 py-2\">Reset</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"basis-1/2 px-20\">\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <p><strong>Customer Order:</strong></p>\n                            </div>\n                            <div class=\"basis-1/2\">\n                                <select name=\"customer\" id=\"\" class=\"form-control\" v-model=\"customer_order\">\n                                    <option value=\"\" disabled=\"true\" selected>--Select Order--</option>\n                                    <option v-for=\"ord in cstOrders\">{{ ord.invoice_no }} [{{ord.id}} ({{ ord.order_total }})]</option> \n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <p><strong>Reference No:</strong></p>\n                            </div>\n                            <div class=\"basis-1/2\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"reference_no\">\n                            </div>\n                        </div>\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <p><strong>Amount Received:</strong></p>\n                            </div>\n                            <div class=\"basis-1/2\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"amount_received\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport {ref, reactive} from \"vue\"\nexport default{\n    props: [\"getAllCustomers\", \"customersArray\", 'showClientOrders','myOrders'],\n    // setup(){\n\n    //     const selectedCustomer = ref(null)\n    //     const state = reactive({\n    //         customer: \"\",\n    //         date: \"\",\n    //         order: \"\",\n    //         reference_no: \"\",\n    //         payment_method: \"\",\n    //         amount: 0,\n    //         orders: [],\n    //         customerOrders: [],\n    //         email: \"\",\n            \n    //     });\n\n    //     const showOrders = ()=>{\n    //        state.email = this.customersArray[selectedCustomer.selectedIndex].email;\n    //        console.log(\"The email is \", state.email)\n    //        console.log(\"The selcted index is \",selectedCustomer.selectedIndex)\n\n    //         // this.axios\n    //         // .get(`api/v1/orders/${user}/`)\n    //         // .then((response) => {\n    //         //     state.orders = response.data;\n    //         //     state.customerOrders = state.orders[selectedCustomer.selectedIndex];\n    //         // })\n    //         // .catch((error) => {\n    //         // console.log(error);\n    //         // });\n    //     }\n    //     return{\n    //         selectedCustomer, showOrders\n    //     }\n    // },\n    data(){\n        return{\n            email: \"\",\n            selectedCust: 0,\n            orders: [],\n            cstOrders: [],\n            errors: [],\n            receipt_date: \"\",\n            payment_method: \"\",\n            reference_no: \"\",\n            amount_received: 0,\n            customer: \"\",\n            customer_order: \"\"\n        }\n    },\n    methods :{\n        showOrders(){\n            this.cstOrders = [];\n            this.selectedCust = this.$refs.customerSelect.selectedIndex - 1;\n            this.email = this.customersArray[this.selectedCust].email;\n    \n            this.axios\n            .get(`api/v1/orders/?=${this.email}/`)\n            .then((response) => {\n                this.orders = response.data;\n                for(let i=0; i<this.orders.length; i++){\n                    if(this.orders[i].user == this.email && this.orders[i].paid == false){\n                        this.cstOrders.push(this.orders[i]);\n                    }\n                }\n            })\n            .catch((error) => {\n            console.log(error);\n            });\n        },\n        createReceipt(){\n            this.errors = [];\n\n        }\n\n    },\n    mounted(){\n        this.getAllCustomers();\n    }\n}\n\n</script>\n\n<style scoped>\n .save-button{\n    background-color: #ff6f61;\n    color: white;\n }\n .reset-button{\n    border: 1px solid;\n    border-color: #ff6f61;\n }\n .save-button:hover{\n    border: 1px solid;\n    background-color: black;\n    color: white;\n }\n .reset-button:hover{\n    border: 1px solid;\n    background-color: #ff6f61;\n    color: white;\n }\n</style>"]},"metadata":{},"sourceType":"module"}