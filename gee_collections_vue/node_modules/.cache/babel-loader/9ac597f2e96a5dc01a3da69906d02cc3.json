{"ast":null,"code":"import swal from \"sweetalert\";\nimport Pagination from \"@/components/Pagination.vue\";\nexport default {\n  data() {\n    return {\n      myEmoji: \"\\u{1F62D}\",\n      pageOfItems: [],\n      couponArr: [],\n      coupon_code: \"\",\n      couponCodes: [],\n      coupon_amount: 0\n    };\n  },\n\n  props: [\"cart\", \"items\", \"cartGrandTotal\", \"cartItemTotal\", \"cartSubTotal\", \"shippingCost\"],\n  components: {\n    Pagination\n  },\n  computed: {\n    prodCartItemTotal() {\n      let itemTotal = [];\n\n      for (let i = 0; i < this.pageOfItems.length; i++) {\n        let lineTotal = (this.pageOfItems[i].quantity * this.pageOfItems[i].items.price).toFixed(2);\n        itemTotal.push(lineTotal);\n      }\n\n      return itemTotal;\n    }\n\n  },\n  methods: {\n    onChangePage(pageOfItems) {\n      // update page of items\n      this.pageOfItems = pageOfItems;\n    },\n\n    incrementQuantity() {\n      let selectedItemQuantity = arguments[0];\n      this.pageOfItems[selectedItemQuantity].quantity += 1;\n      this.updateCart();\n    },\n\n    decrementQuantity() {\n      let selectedItemQuantity = arguments[0];\n\n      if (this.pageOfItems[selectedItemQuantity].quantity >= 2) {\n        this.pageOfItems[selectedItemQuantity].quantity -= 1;\n      } else {\n        this.$store.commit(\"removeFromCart\", selectedItemQuantity);\n        this.$store.commit(\"reloadingPage\");\n      }\n\n      this.updateCart();\n    },\n\n    updateCart() {\n      localStorage.setItem(\"cart\", JSON.stringify(this.$store.state.cart));\n    },\n\n    removeFromCart() {\n      let selectedItem = arguments[0];\n      swal({\n        title: \"Are you sure?\",\n        text: `Do you wish to remove ${this.pageOfItems[selectedItem].items.name} from your cart?`,\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(willDelete => {\n        if (willDelete) {\n          this.$store.commit(\"removeFromCart\", selectedItem);\n          swal(\"Poof! Item removed succesfully!\", {\n            icon: \"success\"\n          });\n          this.$store.commit(\"reloadingPage\");\n        } else {\n          swal(\"Your item is safely in the cart!\");\n        }\n      });\n    },\n\n    applyCouponCode() {\n      this.couponArr = [];\n      this.axios.get(\"/api/v1/coupons/\").then(response => {\n        this.couponArr = response.data;\n\n        for (let i = 0; i < this.couponArr.length; i++) {\n          this.couponCodes.push(this.couponArr[i]);\n        }\n\n        return this.couponCodes;\n      }).catch(error => {\n        console.log(error.message);\n      }).finally(() => {\n        for (let i = 0; i < this.couponCodes.length; i++) {\n          if (this.couponCodes[i].coupon_code == this.coupon_code && this.couponCodes[i].activation_status == true) {\n            this.coupon_amount = this.couponCodes[i].coupon_amount;\n          }\n        }\n      });\n    }\n\n  },\n\n  mounted() {}\n\n};","map":{"version":3,"mappings":"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","names":["swal","Pagination","data","myEmoji","pageOfItems","couponArr","coupon_code","couponCodes","coupon_amount","props","components","computed","prodCartItemTotal","itemTotal","i","length","lineTotal","quantity","items","price","toFixed","push","methods","onChangePage","incrementQuantity","selectedItemQuantity","arguments","updateCart","decrementQuantity","$store","commit","localStorage","setItem","JSON","stringify","state","cart","removeFromCart","selectedItem","title","text","name","icon","buttons","dangerMode","then","willDelete","applyCouponCode","axios","get","response","catch","error","console","log","message","finally","activation_status","mounted"],"sourceRoot":"","sources":["/home/sammyb/gee_collections/gee_collections_vue/src/views/CartView.vue"],"sourcesContent":["<template>\n  <div class=\"cart\">\n    <!-- Breadcrumb Start -->\n    <div class=\"breadcrumb-wrap\">\n      <div class=\"container-fluid\">\n        <ul class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n          <li class=\"breadcrumb-item\"><a href=\"#\">Products</a></li>\n          <li class=\"breadcrumb-item active\">Cart</li>\n        </ul>\n      </div>\n    </div>\n    <!-- Breadcrumb End -->\n    <!-- Cart Start -->\n    <div class=\"cart-page\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-lg-8\">\n            <div class=\"cart-page-inner\">\n              <div class=\"table-responsive\">\n                <table class=\"table table-bordered\">\n                  <thead class=\"thead-dark\">\n                    <tr>\n                      <th>Product</th>\n                      <th>Price</th>\n                      <th>Quantity</th>\n                      <th>Total</th>\n                      <th>Remove</th>\n                    </tr>\n                  </thead>\n                  <tbody class=\"align-middle\">\n                    <tr v-for=\"(prod, index) in pageOfItems\" :key=\"index\">\n                      <td>\n                        <div class=\"img\">\n                          <a href=\"#\"><img :src=\"`${prod.items.image}`\" alt=\"Image\" /></a>\n                          <p>{{ prod.items.name }}</p>\n                        </div>\n                      </td>\n                      <td>{{ Number(prod.items.price).toLocaleString() }}</td>\n                      <td>\n                        <div class=\"qty\">\n                          <button class=\"btn-minus\" @click=\"decrementQuantity(index)\">\n                            <i class=\"fa fa-minus\"></i>\n                          </button>\n                          <input type=\"text\" :value=\"`${prod.quantity}`\" />\n                          <button class=\"btn-plus\" @click=\"incrementQuantity(index)\">\n                            <i class=\"fa fa-plus\"></i>\n                          </button>\n                        </div>\n                      </td>\n                      <td>{{ Number(prodCartItemTotal[index]).toLocaleString() }}</td>\n                      <td>\n                        <button @click=\"removeFromCart(index)\">\n                          <i class=\"fa fa-trash\"></i>\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n                <p class=\"empty-cart\" v-if=\"!Object.keys(cart).length\">\n                  <span class=\"emoji\" role=\"img\" aria-label=\"\">ðŸ˜­</span><br /><em\n                    class=\"empty-cart-message\"\n                    >Ooops,No items in cart</em\n                  >\n                </p>\n                <!-- PAGINATION -->\n                <div class=\"row\">\n                  <Pagination :items=\"cart\" @changePage=\"onChangePage\" :pageSize=\"5\" />\n                </div>\n                <!-- pagination end -->\n              </div>\n            </div>\n          </div>\n          <div class=\"col-lg-4\">\n            <div class=\"cart-page-inner\">\n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"coupon\">\n                    <input type=\"text\" placeholder=\"Coupon Code\" v-model=\"coupon_code\" />\n                    <button @click=\"applyCouponCode\">Apply Code</button>\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"cart-summary\">\n                    <div class=\"cart-content\">\n                      <h1>Cart Summary</h1>\n                      <p class=\"mb-4\">\n                        Sub Total<span\n                          >ksh. {{ Number(cartSubTotal).toLocaleString() }}</span\n                        >\n                      </p>\n                      <p class=\"mb-4\">\n                        Delivery Fee(varies)<span\n                          >ksh. {{ Number(shippingCost).toLocaleString() }}</span\n                        >\n                      </p>\n                      <p class=\"mb-2\">\n                        Coupon Applied<span\n                          >ksh. {{ Number(coupon_amount).toLocaleString() }}</span\n                        >\n                      </p>\n                      <h2>\n                        Grand Total<span>{{\n                          Number(cartGrandTotal).toLocaleString()\n                        }}</span>\n                      </h2>\n                    </div>\n                    <div class=\"cart-btn\">\n                      <button>\n                        <router-link to=\"/products\" class=\"check-btn\"\n                          >Update Cart</router-link\n                        >\n                      </button>\n                      <button v-if=\"cart.length\">\n                        <router-link to=\"/checkout\" class=\"checkout\"\n                          >Checkout</router-link\n                        >\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Cart End -->\n  </div>\n</template>\n\n<script>\nimport swal from \"sweetalert\";\nimport Pagination from \"@/components/Pagination.vue\";\n\nexport default {\n  data() {\n    return {\n      myEmoji: \"\\u{1F62D}\",\n      pageOfItems: [],\n      couponArr : [],\n      coupon_code: \"\",\n      couponCodes: [],\n      coupon_amount: 0,\n    };\n  },\n  props: [\n    \"cart\",\n    \"items\",\n    \"cartGrandTotal\",\n    \"cartItemTotal\",\n    \"cartSubTotal\",\n    \"shippingCost\",\n  ],\n  components: {\n    Pagination,\n  },\n  computed: {\n    prodCartItemTotal() {\n      let itemTotal = [];\n      for (let i = 0; i < this.pageOfItems.length; i++) {\n        let lineTotal = (\n          this.pageOfItems[i].quantity * this.pageOfItems[i].items.price\n        ).toFixed(2);\n        itemTotal.push(lineTotal);\n      }\n      return itemTotal;\n    },\n  },\n  methods: {\n    onChangePage(pageOfItems) {\n      // update page of items\n      this.pageOfItems = pageOfItems;\n    },\n    incrementQuantity() {\n      let selectedItemQuantity = arguments[0];\n      this.pageOfItems[selectedItemQuantity].quantity += 1;\n      this.updateCart();\n    },\n    decrementQuantity() {\n      let selectedItemQuantity = arguments[0];\n      if (this.pageOfItems[selectedItemQuantity].quantity >= 2) {\n        this.pageOfItems[selectedItemQuantity].quantity -= 1;\n      } else {\n        this.$store.commit(\"removeFromCart\", selectedItemQuantity);\n        this.$store.commit(\"reloadingPage\");\n      }\n      this.updateCart();\n    },\n    updateCart() {\n      localStorage.setItem(\"cart\", JSON.stringify(this.$store.state.cart));\n    },\n    removeFromCart() {\n      let selectedItem = arguments[0];\n      swal({\n        title: \"Are you sure?\",\n        text: `Do you wish to remove ${this.pageOfItems[selectedItem].items.name} from your cart?`,\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true,\n      }).then((willDelete) => {\n        if (willDelete) {\n          this.$store.commit(\"removeFromCart\", selectedItem);\n          swal(\"Poof! Item removed succesfully!\", {\n            icon: \"success\",\n          });\n          this.$store.commit(\"reloadingPage\");\n        } else {\n          swal(\"Your item is safely in the cart!\");\n        }\n      });\n    },\n    applyCouponCode(){\n      this.couponArr = [];\n      this.axios\n      .get(\"/api/v1/coupons/\")\n      .then((response)=>{\n        this.couponArr = response.data;\n        for(let i=0; i<this.couponArr.length; i++){\n          this.couponCodes.push(this.couponArr[i]);\n        }\n        return this.couponCodes;\n      })\n      .catch((error)=>{\n        console.log(error.message);\n      })\n      .finally(()=>{\n        for(let i=0; i<this.couponCodes.length; i++){\n          if(this.couponCodes[i].coupon_code == this.coupon_code && this.couponCodes[i].activation_status == true){\n            this.coupon_amount = this.couponCodes[i].coupon_amount ;\n          }\n        }\n      })\n    },\n  },\n  mounted() {},\n};\n</script>\n\n<style scoped>\n.empty-cart {\n  text-align: center;\n  font-size: 20px;\n  font-weight: bold;\n  margin: 20px;\n}\n.emoji {\n  font-size: 36px;\n  font-style: normal;\n}\n.checkout {\n  color: white;\n}\n.checkout:hover {\n  color: #ff6f61;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}