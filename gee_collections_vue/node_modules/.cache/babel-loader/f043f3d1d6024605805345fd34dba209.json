{"ast":null,"code":"export default {\n  props: {\n    maxVisibleButtons: {\n      type: Number,\n      required: false,\n      default: 3\n    },\n    totalPages: {\n      type: Number,\n      required: true\n    },\n    perPage: {\n      type: Number,\n      required: true\n    },\n    currentPage: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    startPage() {\n      // When on the first page\n      if (this.currentPage === 1) {\n        return 1;\n      } // When on the last page\n\n\n      if (this.currentPage === this.totalPages) {\n        return this.totalPages - this.maxVisibleButtons;\n      } // When inbetween\n\n\n      return this.currentPage - 1;\n    },\n\n    pages() {\n      const range = [];\n\n      for (let i = this.startPage; i <= Math.min(this.startPage + this.maxVisibleButtons - 1, this.totalPages); i++) {\n        range.push({\n          name: i,\n          isDisabled: i === this.currentPage\n        });\n      }\n\n      return range;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6BA,eAAe;AACbA,OAAK,EAAE;AACLC,qBAAiB,EAAE;AACjBC,UAAI,EAAEC,MADW;AAEjBC,cAAQ,EAAE,KAFO;AAGjBC,aAAO,EAAE;AAHQ,KADd;AAMLC,cAAU,EAAE;AACVJ,UAAI,EAAEC,MADI;AAEVC,cAAQ,EAAE;AAFA,KANP;AAULG,WAAO,EAAE;AACPL,UAAI,EAAEC,MADC;AAEPC,cAAQ,EAAE;AAFH,KAVJ;AAcLI,eAAW,EAAE;AACXN,UAAI,EAAEC,MADK;AAEXC,cAAQ,EAAE;AAFC;AAdR,GADM;AAoBbK,UAAQ,EAAE;AACRC,aAAS,GAAG;AACV;AACA,UAAI,KAAKF,WAAL,KAAqB,CAAzB,EAA4B;AAC1B,eAAO,CAAP;AACF,OAJU,CAKV;;;AACA,UAAI,KAAKA,WAAL,KAAqB,KAAKF,UAA9B,EAA0C;AACxC,eAAO,KAAKA,UAAL,GAAkB,KAAKL,iBAA9B;AACF,OARU,CASV;;;AACA,aAAO,KAAKO,WAAL,GAAmB,CAA1B;AACD,KAZO;;AAaRG,SAAK,GAAG;AACN,YAAMC,KAAI,GAAI,EAAd;;AACA,WAAK,IAAIC,IAAI,KAAKH,SAAlB,EAA4BG,KAAKC,IAAI,CAACC,GAAL,CAAS,KAAKL,SAAL,GAAiB,KAAKT,iBAAtB,GAA0C,CAAnD,EAAsD,KAAKK,UAA3D,CAAjC,EAAwGO,CAAC,EAAzG,EAA6G;AAC3GD,aAAK,CAACI,IAAN,CAAW;AACTC,cAAI,EAAEJ,CADG;AAETK,oBAAU,EAAEL,MAAM,KAAKL;AAFd,SAAX;AAIF;;AACA,aAAOI,KAAP;AACD;;AAtBO;AApBG,CAAf","names":["props","maxVisibleButtons","type","Number","required","default","totalPages","perPage","currentPage","computed","startPage","pages","range","i","Math","min","push","name","isDisabled"],"sourceRoot":"","sources":["/home/sammyb/gee_collections/gee_collections_vue/src/components/Pagination.vue"],"sourcesContent":["<template>\n    <div>\n        <!-- Pagination Start -->\n        <div class=\"col-md-12\">\n            <nav aria-label=\"Page navigation example\">\n                <ul class=\"pagination justify-content-center\">\n                    <li class=\"page-item\">\n                        <a class=\"page-link\" href=\"#\">First</a>\n                    </li>\n                    <li class=\"page-item disabled\">\n                        <a class=\"page-link\" href=\"#\" tabindex=\"-1\">Previous</a>\n                    </li>\n                    <li class=\"page-item active\"><a class=\"page-link\" href=\"#\">1</a></li>\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">2</a></li>\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\n                    <li class=\"page-item\">\n                        <a class=\"page-link\" href=\"#\">Next</a>\n                    </li>\n                    <li class=\"page-item\">\n                        <a class=\"page-link\" href=\"#\">Last</a>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n        <!-- Pagination Start -->\n    </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    maxVisibleButtons: {\n      type: Number,\n      required: false,\n      default: 3\n    },    \n    totalPages: {\n      type: Number,\n      required: true\n    },\n    perPage: {\n      type: Number,\n      required: true\n    },\n    currentPage: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    startPage() {\n      // When on the first page\n      if (this.currentPage === 1) {\n        return 1;\n      }\n      // When on the last page\n      if (this.currentPage === this.totalPages) {\n        return this.totalPages - this.maxVisibleButtons;\n      }\n      // When inbetween\n      return this.currentPage - 1;\n    },\n    pages() {\n      const range = [];\n      for (let i = this.startPage;i <= Math.min(this.startPage + this.maxVisibleButtons - 1, this.totalPages);i++) {\n        range.push({\n          name: i,\n          isDisabled: i === this.currentPage\n        });\n      }\n      return range;\n    },\n  }\n};\n</script>"]},"metadata":{},"sourceType":"module"}