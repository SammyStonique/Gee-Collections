{"ast":null,"code":"import { ref, reactive } from \"vue\";\nexport default {\n  props: [\"getAllCustomers\", \"customersArray\", 'showClientOrders', 'myOrders'],\n\n  // setup(){\n  //     const selectedCustomer = ref(null)\n  //     const state = reactive({\n  //         customer: \"\",\n  //         date: \"\",\n  //         order: \"\",\n  //         reference_no: \"\",\n  //         payment_method: \"\",\n  //         amount: 0,\n  //         orders: [],\n  //         customerOrders: [],\n  //         email: \"\",\n  //     });\n  //     const showOrders = ()=>{\n  //        state.email = this.customersArray[selectedCustomer.selectedIndex].email;\n  //        console.log(\"The email is \", state.email)\n  //        console.log(\"The selcted index is \",selectedCustomer.selectedIndex)\n  //         // this.axios\n  //         // .get(`api/v1/orders/${user}/`)\n  //         // .then((response) => {\n  //         //     state.orders = response.data;\n  //         //     state.customerOrders = state.orders[selectedCustomer.selectedIndex];\n  //         // })\n  //         // .catch((error) => {\n  //         // console.log(error);\n  //         // });\n  //     }\n  //     return{\n  //         selectedCustomer, showOrders\n  //     }\n  // },\n  data() {\n    return {\n      email: \"\",\n      customerID: \"\",\n      selectedCust: 0,\n      selectedOrd: 0,\n      orders: [],\n      cstOrders: [],\n      errors: [],\n      receipt_date: \"\",\n      payment_method: \"\",\n      reference_no: \"\",\n      amount_received: 0,\n      customer: \"\",\n      customer_order: \"\",\n      balance: 0,\n      order_id: \"\",\n      payment_status: false\n    };\n  },\n\n  methods: {\n    showOrders() {\n      this.cstOrders = [];\n      this.selectedCust = this.$refs.customerSelect.selectedIndex - 1;\n      this.email = this.customersArray[this.selectedCust].email;\n      this.customerID = this.customersArray[this.selectedCust].id;\n      this.axios.get(`api/v1/orders/?=${this.email}/`).then(response => {\n        this.orders = response.data;\n\n        for (let i = 0; i < this.orders.length; i++) {\n          if (this.orders[i].user == this.email && this.orders[i].paid == false) {\n            this.cstOrders.push(this.orders[i]);\n          }\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    setOrderID() {\n      this.order_id = \"\";\n      this.selectedOrd = this.$refs.orderSelect.selectedIndex - 1;\n      this.order_id = this.cstOrders[this.selectedOrd].id;\n      this.payment_status = this.cstOrders[this.selectedOrd].paid;\n    },\n\n    createReceipt() {\n      this.errors = [];\n\n      if (this.customer === \"\" && this.receipt_date === \"\" && this.payment_method === \"\" && this.customer_order === \"\" && this.reference_no === \"\" && this.amount_received === \"\") {\n        this.errors.push(\"Please fill in the details!\");\n      } else {\n        if (this.customer === \"\" || this.receipt_date === \"\" || this.payment_method === \"\" || this.customer_order === \"\" || this.reference_no === \"\" || this.amount_received === \"\") {\n          this.errors.push(\"Some details are missing!\");\n        }\n      }\n\n      this.balance = this.cstOrders[this.selectedOrd].order_total - this.amount_received;\n\n      if (!this.errors.length) {\n        let formData = {\n          receipt_order: this.order_id,\n          receipt_user: this.customerID,\n          received_amount: Number(this.amount_received).toFixed(2),\n          payment_method: this.payment_method,\n          reference_no: this.reference_no,\n          created_at: this.receipt_date,\n          balance: Number(this.balance).toFixed(2)\n        };\n        this.axios.post('api/v1/generate-receipt/', formData).then(response => {\n          this.cstOrders[this.selectedOrd].paid = true;\n          this.$toast.success(\"Receipt Succesfully Added\", {\n            duration: 5000,\n            dismissible: true\n          });\n        }).catch(error => {\n          console.log(error);\n        }).finally(() => {\n          let formData = {\n            is_paid: this.payment_status,\n            payment_reference: this.reference_no\n          };\n          this.axios.put(\"/api/v1/\" + this.order_id + \"/\", formData).then(response => {\n            console.log(response);\n          }).catch(error => {\n            console.log(error);\n          }).finally(() => {\n            this.customer = \"\";\n            this.customer_order = \"\";\n            this.amount_received = 0;\n            this.receipt_date = \"\";\n            this.payment_method = \"\";\n            this.reference_no = \"\";\n          });\n        });\n      }\n    }\n\n  },\n\n  mounted() {\n    this.getAllCustomers();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","reactive","props","data","email","customerID","selectedCust","selectedOrd","orders","cstOrders","errors","receipt_date","payment_method","reference_no","amount_received","customer","customer_order","balance","order_id","payment_status","methods","showOrders","$refs","customerSelect","selectedIndex","customersArray","id","axios","get","then","response","i","length","user","paid","push","catch","error","console","log","setOrderID","orderSelect","createReceipt","order_total","formData","receipt_order","receipt_user","received_amount","Number","toFixed","created_at","post","$toast","success","duration","dismissible","finally","is_paid","payment_reference","put","mounted","getAllCustomers"],"sourceRoot":"","sources":["/home/sammyb/gee_collections/gee_collections_vue/src/views/ReceiptAddView.vue"],"sourcesContent":["<template>\n    <!-- Breadcrumb Start -->\n    <div class=\"breadcrumb-wrap\">\n      <div class=\"container-fluid\">\n        <ul class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n          <li class=\"breadcrumb-item\"><router-link to=\"/cart\">Receipts</router-link></li>\n          <li class=\"breadcrumb-item active\">New Receipt</li>\n        </ul>\n      </div>\n    </div>\n    <!-- Breadcrumb End -->\n    <!-- Checkout Start -->\n    <div class=\"receipt-add w-full px-16 py-10\">\n        <div class=\"bg-white py-10\">\n            <form action=\"\" @submit.prevent=\"createReceipt\">\n                <div class=\"flex\">\n                    <div class=\"basis-1/2 px-20\">\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <p><strong>Customer :</strong></p>\n                            </div>\n                            <div class=\"basis-1/2\">\n                                <select name=\"customer\" ref=\"customerSelect\" id=\"selectCustomer\" class=\"form-control\" @change=\"showOrders\" onfocus=\"this.selectedIndex = -1;\" v-model=\"customer\">\n                                    <option value=\"\" disabled=\"true\" selected>--Select Customer--</option>\n                                    <option v-for=\"cust in customersArray\">{{ cust.first_name }} {{ cust.last_name }}</option> \n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <p><strong>Receipt Date :</strong></p>\n                            </div>\n                            <div class=\"basis-1/2\">\n                                <input type=\"date\" name=\"\" id=\"\" class=\"form-control\" v-model=\"receipt_date\">\n                            </div>\n                        </div>\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <p><strong>Payment Method :</strong></p>\n                            </div>\n                            <div class=\"basis-1/2\">\n                                <select name=\"payment-method\" id=\"\" class=\"form-control\" v-model=\"payment_method\">\n                                    <option value=\"\" disabled=\"true\">--Select Payment Method--</option>\n                                    <option value=\"Cash\">Cash</option>\n                                    <option value=\"Mpesa\">Mpesa</option>\n                                    <option value=\"Cheque\">Cheque</option>\n                                    <option value=\"EFT\">EFT</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"col-md-12 notification is-danger\" v-if=\"errors.length\">\n                            <p style=\"color: red\" v-for=\"error in errors\" v-bind:key=\"error\">\n                                {{ error }}\n                            </p>\n                        </div>\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <button type=\"submit\" class=\"save-button rounded w-24 px-3 py-2\">Save</button>\n                            </div>\n                            <div class=\"basis-1/2\">\n                                <button type=\"reset\" class=\"reset-button rounded w-24 px-3 py-2\">Reset</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"basis-1/2 px-20\">\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <p><strong>Customer Order:</strong></p>\n                            </div>\n                            <div class=\"basis-1/2\">\n                                <select name=\"order\" ref=\"orderSelect\" id=\"\" class=\"form-control\" @change=\"setOrderID\" onfocus=\"this.selectedIndex = -1;\" v-model=\"customer_order\">\n                                    <option value=\"\" disabled=\"true\" selected>--Select Order--</option>\n                                    <option v-for=\"ord in cstOrders\">{{ ord.invoice_no }} [{{ord.id}} ({{ ord.order_total }})]</option> \n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <p><strong>Reference No:</strong></p>\n                            </div>\n                            <div class=\"basis-1/2\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"reference_no\">\n                            </div>\n                        </div>\n                        <div class=\"flex\">\n                            <div class=\"basis-1/2\">\n                                <p><strong>Amount Received:</strong></p>\n                            </div>\n                            <div class=\"basis-1/2\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"amount_received\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport {ref, reactive} from \"vue\"\nexport default{\n    props: [\"getAllCustomers\", \"customersArray\", 'showClientOrders','myOrders'],\n    // setup(){\n\n    //     const selectedCustomer = ref(null)\n    //     const state = reactive({\n    //         customer: \"\",\n    //         date: \"\",\n    //         order: \"\",\n    //         reference_no: \"\",\n    //         payment_method: \"\",\n    //         amount: 0,\n    //         orders: [],\n    //         customerOrders: [],\n    //         email: \"\",\n            \n    //     });\n\n    //     const showOrders = ()=>{\n    //        state.email = this.customersArray[selectedCustomer.selectedIndex].email;\n    //        console.log(\"The email is \", state.email)\n    //        console.log(\"The selcted index is \",selectedCustomer.selectedIndex)\n\n    //         // this.axios\n    //         // .get(`api/v1/orders/${user}/`)\n    //         // .then((response) => {\n    //         //     state.orders = response.data;\n    //         //     state.customerOrders = state.orders[selectedCustomer.selectedIndex];\n    //         // })\n    //         // .catch((error) => {\n    //         // console.log(error);\n    //         // });\n    //     }\n    //     return{\n    //         selectedCustomer, showOrders\n    //     }\n    // },\n    data(){\n        return{\n            email: \"\",\n            customerID: \"\",\n            selectedCust: 0,\n            selectedOrd: 0,\n            orders: [],\n            cstOrders: [],\n            errors: [],\n            receipt_date: \"\",\n            payment_method: \"\",\n            reference_no: \"\",\n            amount_received: 0,\n            customer: \"\",\n            customer_order: \"\",\n            balance: 0,\n            order_id: \"\",\n            payment_status: false,\n        }\n    },\n    methods :{\n        showOrders(){\n            this.cstOrders = [];\n            this.selectedCust = this.$refs.customerSelect.selectedIndex - 1;\n            this.email = this.customersArray[this.selectedCust].email;\n            this.customerID = this.customersArray[this.selectedCust].id;\n    \n            this.axios\n            .get(`api/v1/orders/?=${this.email}/`)\n            .then((response) => {\n                this.orders = response.data;\n                for(let i=0; i<this.orders.length; i++){\n                    if(this.orders[i].user == this.email && this.orders[i].paid == false){\n                        this.cstOrders.push(this.orders[i]);\n                    }\n                }\n            })\n            .catch((error) => {\n            console.log(error);\n            });\n        },\n        setOrderID(){\n            this.order_id = \"\";\n            this.selectedOrd = this.$refs.orderSelect.selectedIndex - 1;\n            this.order_id = this.cstOrders[this.selectedOrd].id;\n            this.payment_status = this.cstOrders[this.selectedOrd].paid;\n        },\n        createReceipt(){\n            this.errors = [];\n            if (\n                this.customer === \"\" &&\n                this.receipt_date === \"\" &&\n                this.payment_method === \"\" &&\n                this.customer_order === \"\" &&\n                this.reference_no === \"\" &&\n                this.amount_received === \"\"\n            ) {\n                this.errors.push(\"Please fill in the details!\");\n            } else {\n                if (\n                this.customer === \"\" ||\n                this.receipt_date === \"\" ||\n                this.payment_method === \"\" ||\n                this.customer_order === \"\" ||\n                this.reference_no === \"\" ||\n                this.amount_received === \"\" \n                ) {\n                this.errors.push(\"Some details are missing!\");\n                }\n            }\n            this.balance = this.cstOrders[this.selectedOrd].order_total - this.amount_received;\n            if (!this.errors.length) {\n                let formData = {\n                    receipt_order: this.order_id,\n                    receipt_user: this.customerID,\n                    received_amount: Number(this.amount_received).toFixed(2),\n                    payment_method: this.payment_method,\n                    reference_no: this.reference_no,\n                    created_at: this.receipt_date,\n                    balance: Number(this.balance).toFixed(2)\n                }\n                this.axios\n                .post('api/v1/generate-receipt/', formData)\n                .then((response)=>{\n                    this.cstOrders[this.selectedOrd].paid = true;\n                    this.$toast.success(\"Receipt Succesfully Added\", {\n                    duration: 5000,\n                    dismissible: true,\n                    });\n                })\n                .catch((error)=>{\n                    console.log(error);\n                })\n                .finally(()=>{\n   \n                    let formData = {\n                        is_paid : this.payment_status,\n                        payment_reference : this.reference_no\n                    }\n                    \n                    this.axios\n                    .put(\"/api/v1/\" + this.order_id + \"/\", formData)\n                    .then((response)=>{\n                        console.log(response);\n                    })\n                    .catch((error)=>{\n                        console.log(error);\n                    })\n                    .finally(()=>{\n                        this.customer = \"\";\n                        this.customer_order = \"\";\n                        this.amount_received = 0;\n                        this.receipt_date = \"\";\n                        this.payment_method = \"\";\n                        this.reference_no = \"\";\n                    })\n                    \n                })\n            }\n\n        }\n\n    },\n    mounted(){\n        this.getAllCustomers();\n    }\n}\n\n</script>\n\n<style scoped>\n .save-button{\n    background-color: #ff6f61;\n    color: white;\n }\n .reset-button{\n    border: 1px solid;\n    border-color: #ff6f61;\n }\n .save-button:hover{\n    border: 1px solid;\n    background-color: black;\n    color: white;\n }\n .reset-button:hover{\n    border: 1px solid;\n    background-color: #ff6f61;\n    color: white;\n }\n</style>"]},"metadata":{},"sourceType":"module"}